(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    394303,       8088]
NotebookOptionsPosition[    385651,       7954]
NotebookOutlinePosition[    386021,       7970]
CellTagsIndexPosition[    385978,       7967]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["fast", "Text",
 CellChangeTimes->{{3.772734266485057*^9, 3.772734317645536*^9}, {
  3.773008644574402*^9, 3.773008649080277*^9}, {3.773145028151886*^9, 
  3.773145028619802*^9}},ExpressionUUID->"d4a03e1f-83ec-4f65-8c5c-\
93b8604f874c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"colRll", "=", 
  RowBox[{
   RowBox[{"ColorData", "[", 
    RowBox[{"90", ",", " ", "\"\<ColorList\>\""}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"colRtd", " ", "=", 
  RowBox[{
   RowBox[{"ColorData", "[", 
    RowBox[{"70", ",", " ", "\"\<ColorList\>\""}], "]"}], "[", 
   RowBox[{"[", "3", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"colRin", "=", 
  RowBox[{
   RowBox[{"ColorData", "[", 
    RowBox[{"51", ",", " ", "\"\<ColorList\>\""}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"colDll", " ", "=", 
  RowBox[{
   RowBox[{"ColorData", "[", 
    RowBox[{"93", ",", " ", "\"\<ColorList\>\""}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"colDav", "=", 
  RowBox[{
   RowBox[{"ColorData", "[", 
    RowBox[{"33", ",", " ", "\"\<ColorList\>\""}], "]"}], "[", 
   RowBox[{"[", "3", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"colCoa", "=", 
  RowBox[{
   RowBox[{"ColorData", "[", 
    RowBox[{"21", ",", " ", "\"\<ColorList\>\""}], "]"}], "[", 
   RowBox[{"[", "3", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"colCll", "=", 
  RowBox[{
   RowBox[{"ColorData", "[", 
    RowBox[{"90", ",", " ", "\"\<ColorList\>\""}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"colCln", " ", "=", 
  RowBox[{
   RowBox[{"ColorData", "[", 
    RowBox[{"66", ",", " ", "\"\<ColorList\>\""}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"colCon", " ", "=", 
  RowBox[{
   RowBox[{"ColorData", "[", 
    RowBox[{"26", ",", " ", "\"\<ColorList\>\""}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"colNor", "=", 
  RowBox[{
   RowBox[{"ColorData", "[", 
    RowBox[{"55", ",", " ", "\"\<ColorList\>\""}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.762886921608927*^9, 3.762886951709727*^9}, {
  3.762887139110327*^9, 3.762887201501727*^9}, {3.765227622045994*^9, 
  3.7652276448532743`*^9}, {3.7652892794813766`*^9, 3.765289282824377*^9}},
 CellLabel->
  "In[2974]:=",ExpressionUUID->"044ffea9-f502-4923-8617-34d3b9c3833f"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {Hue[0.01, 0.8, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->Hue[0.010000000000000014`, 0.8, 0.5333333333333334],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    StyleBox[
     RowBox[{"Hue", "[", 
       RowBox[{"0.01`", ",", "0.8`", ",", "0.8`"}], "]"}], NumberMarks -> 
     False]],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.01, 0.8, 0.8]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  Hue[0.01, 0.8, 0.8],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.773145025233198*^9, 3.773145038084331*^9}, 
   3.7731689846513844`*^9, 3.773343972247287*^9, 3.773409456879332*^9, 
   3.7734099203953743`*^9},
 CellLabel->
  "Out[2974]=",ExpressionUUID->"bc9153b6-e141-4ce7-964a-fa2e0ae5733d"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {Hue[0.5, 0.5, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->Hue[0.5, 0.5, 0.33333333333333337`],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    StyleBox[
     RowBox[{"Hue", "[", 
       RowBox[{"0.5`", ",", "0.5`", ",", "0.5`"}], "]"}], NumberMarks -> 
     False]],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.5, 0.5, 0.5]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  Hue[0.5, 0.5, 0.5],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.773145025233198*^9, 3.773145038084331*^9}, 
   3.7731689846513844`*^9, 3.773343972247287*^9, 3.773409456879332*^9, 
   3.773409920399246*^9},
 CellLabel->
  "Out[2975]=",ExpressionUUID->"93e43903-9d15-4648-97b0-bd98a10c09ed"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[1, 0.753262, 0.0437629], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->RGBColor[
      0.6666666666666666, 0.5021746666666667, 0.029175266666666668`],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    StyleBox[
     RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0.753262`", ",", "0.0437629`"}], "]"}], NumberMarks -> 
     False]],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = 
       RGBColor[1, 0.753262, 0.0437629]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[1, 0.753262, 0.0437629],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.773145025233198*^9, 3.773145038084331*^9}, 
   3.7731689846513844`*^9, 3.773343972247287*^9, 3.773409456879332*^9, 
   3.773409920402322*^9},
 CellLabel->
  "Out[2976]=",ExpressionUUID->"bda4520d-fa7a-40e4-b071-fd7c14c93855"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {Hue[0.11, 0.75, 0.92], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->Hue[0.10999999999999997`, 0.75, 0.6133333333333334],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    StyleBox[
     RowBox[{"Hue", "[", 
       RowBox[{"0.11`", ",", "0.75`", ",", "0.92`"}], "]"}], NumberMarks -> 
     False]],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.11, 0.75, 0.92]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  Hue[0.11, 0.75, 0.92],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.773145025233198*^9, 3.773145038084331*^9}, 
   3.7731689846513844`*^9, 3.773343972247287*^9, 3.773409456879332*^9, 
   3.773409920405304*^9},
 CellLabel->
  "Out[2977]=",ExpressionUUID->"548c1fb2-df1b-4628-8779-8cfbfd72dde1"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[0.8509803921568627, 0.7333333333333333, 0.592156862745098], 
       RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->RGBColor[
      0.5673202614379085, 0.4888888888888889, 0.3947712418300654],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    StyleBox[
     RowBox[{"RGBColor", "[", 
       RowBox[{
        "0.8509803921568627`", ",", "0.7333333333333333`", ",", 
         "0.592156862745098`"}], "]"}], NumberMarks -> False]],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = 
       RGBColor[0.8509803921568627, 0.7333333333333333, 0.592156862745098]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[0.8509803921568627, 0.7333333333333333, 0.592156862745098],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.773145025233198*^9, 3.773145038084331*^9}, 
   3.7731689846513844`*^9, 3.773343972247287*^9, 3.773409456879332*^9, 
   3.773409920408195*^9},
 CellLabel->
  "Out[2978]=",ExpressionUUID->"f647597c-3af4-438b-b3dd-514475b1bd31"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[1., 0.35294117647058826`, 0.12156862745098039`], 
       RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->RGBColor[
      0.6666666666666667, 0.23529411764705885`, 0.08104575163398693],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    StyleBox[
     RowBox[{"RGBColor", "[", 
       RowBox[{
        "1.`", ",", "0.35294117647058826`", ",", "0.12156862745098039`"}], 
       "]"}], NumberMarks -> False]],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = 
       RGBColor[1., 0.35294117647058826`, 0.12156862745098039`]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[1., 0.35294117647058826`, 0.12156862745098039`],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.773145025233198*^9, 3.773145038084331*^9}, 
   3.7731689846513844`*^9, 3.773343972247287*^9, 3.773409456879332*^9, 
   3.773409920410988*^9},
 CellLabel->
  "Out[2979]=",ExpressionUUID->"61e8b23a-2331-4995-8013-eb4b1252f5b8"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {Hue[0.22, 1, 0.6], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->Hue[0.21999999999999997`, 1., 0.4],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    StyleBox[
     RowBox[{"Hue", "[", 
       RowBox[{"0.22`", ",", "1", ",", "0.6`"}], "]"}], NumberMarks -> False]],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.22, 1, 0.6]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  Hue[0.22, 1, 0.6],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.773145025233198*^9, 3.773145038084331*^9}, 
   3.7731689846513844`*^9, 3.773343972247287*^9, 3.773409456879332*^9, 
   3.773409920413692*^9},
 CellLabel->
  "Out[2980]=",ExpressionUUID->"84ff3f39-41f4-4649-bcfd-cf24143fe4b0"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {Hue[0.17, 0.4, 0.65], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->Hue[0.16999999999999993`, 0.4, 0.43333333333333335`],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    StyleBox[
     RowBox[{"Hue", "[", 
       RowBox[{"0.17`", ",", "0.4`", ",", "0.65`"}], "]"}], NumberMarks -> 
     False]],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.17, 0.4, 0.65]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  Hue[0.17, 0.4, 0.65],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.773145025233198*^9, 3.773145038084331*^9}, 
   3.7731689846513844`*^9, 3.773343972247287*^9, 3.773409456879332*^9, 
   3.773409920416478*^9},
 CellLabel->
  "Out[2981]=",ExpressionUUID->"4bd302ad-6c46-4d2b-b917-0c5c3cb91d45"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[0.9098039215686274, 0.3607843137254902, 0.21568627450980393`],
        RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->RGBColor[
      0.6065359477124184, 0.24052287581699347`, 0.14379084967320263`],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    StyleBox[
     RowBox[{"RGBColor", "[", 
       RowBox[{
        "0.9098039215686274`", ",", "0.3607843137254902`", ",", 
         "0.21568627450980393`"}], "]"}], NumberMarks -> False]],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = 
       RGBColor[0.9098039215686274, 0.3607843137254902, 0.21568627450980393`]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[0.9098039215686274, 0.3607843137254902, 0.21568627450980393`],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.773145025233198*^9, 3.773145038084331*^9}, 
   3.7731689846513844`*^9, 3.773343972247287*^9, 3.773409456879332*^9, 
   3.773409920419216*^9},
 CellLabel->
  "Out[2982]=",ExpressionUUID->"ec6faaad-a8a4-4ddf-b40a-4e1632e19f5a"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[0.709133, 0.747539, 0.83711], RectangleBox[{0, -1}, {2, 1}]}},
     
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->RGBColor[
      0.47275533333333336`, 0.4983593333333333, 0.5580733333333334],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    StyleBox[
     RowBox[{"RGBColor", "[", 
       RowBox[{"0.709133`", ",", "0.747539`", ",", "0.83711`"}], "]"}], 
     NumberMarks -> False]],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = 
       RGBColor[0.709133, 0.747539, 0.83711]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[0.709133, 0.747539, 0.83711],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.773145025233198*^9, 3.773145038084331*^9}, 
   3.7731689846513844`*^9, 3.773343972247287*^9, 3.773409456879332*^9, 
   3.773409920421962*^9},
 CellLabel->
  "Out[2983]=",ExpressionUUID->"458e82bb-8839-4b5d-a852-4376b80abaef"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SigI", ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Pauli", " ", "matrices"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SigZ", ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SigX", ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SigY", ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "I"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"I", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellLabel->"In[2984]:=",
 CellID->2,ExpressionUUID->"468f7cd3-09b3-4a90-8791-770fb7b0811a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"c", "=", "2"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"At", "[", 
     RowBox[{"mat_", ",", "loc_"}], "]"}], ":=", 
    RowBox[{"KroneckerProduct", "@@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", "\[Equal]", "loc"}], ",", "mat", ",", "SigI"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "c"}], "}"}]}], "]"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Tensor", " ", "products"}], "*)"}]}]}], "Input",
 CellLabel->
  "In[2988]:=",ExpressionUUID->"b164b200-1e15-4f1b-883d-f70ced69b1e1"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{
  3.768574379215624*^9, 3.7686593842470055`*^9, 3.7687714312655373`*^9, 
   3.7688361394202495`*^9, 3.768854937674627*^9, 3.7689175745661316`*^9, {
   3.768933233892132*^9, 3.7689332597365317`*^9}, 3.7689383448970675`*^9, 
   3.772813878415023*^9, 3.772899346413892*^9, 3.773007525666512*^9, 
   3.773008241053691*^9, 3.7730140312300043`*^9, 3.773066787435965*^9, 
   3.773066869817503*^9, 3.773070327437232*^9, 3.773071626404778*^9, 
   3.773145038167798*^9, 3.773166627088583*^9, 3.7731689847834387`*^9, 
   3.773343972371542*^9, 3.773409456949409*^9, 3.773409920471946*^9},
 CellLabel->
  "Out[2988]=",ExpressionUUID->"83c5c7df-fcef-48d3-a826-1558fd5dabbb"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H", "=", " ", 
   RowBox[{
    RowBox[{"0.5", " ", 
     RowBox[{"At", "[", 
      RowBox[{"SigZ", ",", "1"}], "]"}]}], " ", "-", 
    RowBox[{"0.7", "  ", 
     RowBox[{"At", "[", 
      RowBox[{"SigZ", ",", "2"}], "]"}]}], " ", "+", " ", 
    RowBox[{"0.3", 
     RowBox[{
      RowBox[{"At", "[", 
       RowBox[{"SigZ", ",", "1"}], "]"}], ".", " ", 
      RowBox[{"At", "[", 
       RowBox[{"SigZ", ",", "2"}], "]"}]}]}], " ", "+", " ", 
    RowBox[{"At", "[", 
     RowBox[{"SigX", ",", "1"}], "]"}], " ", "+", 
    RowBox[{"At", "[", 
     RowBox[{"SigX", ",", "2"}], "]"}]}]}], "  ", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    RowBox[{"At", "[", 
     RowBox[{"SigZ", ",", "1"}], "]"}]}], ";"}], "\n"}], "\n"}], "Input",
 CellChangeTimes->{
  3.77341005394493*^9},ExpressionUUID->"9f264f27-5898-4c0f-bbe0-bd58dbc83e64"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Es", ",", "S"}], "}"}], " ", "=", 
   RowBox[{"Eigensystem", "[", "H", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Sd", " ", "=", " ", 
   RowBox[{"Transpose", "[", "S", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Ainbasis", " ", "=", 
   RowBox[{"S", ".", "A", ".", "Sd"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rhoIn", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"At", "[", 
        RowBox[{"SigZ", ",", "2"}], "]"}], " ", "+", " ", 
       RowBox[{
        RowBox[{"At", "[", 
         RowBox[{"SigZ", ",", "1"}], "]"}], ".", 
        RowBox[{"At", "[", 
         RowBox[{"SigZ", ",", "2"}], "]"}]}]}], ")"}], "/", "4"}], " ", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"At", "[", 
        RowBox[{"SigZ", ",", "1"}], "]"}], " ", "+", " ", 
       RowBox[{"At", "[", 
        RowBox[{"SigI", ",", "1"}], "]"}]}], ")"}], "/", "4"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7685749255672007`*^9, 3.768574926775201*^9}},
 CellLabel->
  "In[2992]:=",ExpressionUUID->"c3dd7013-b3ba-48d8-809d-475e092fc181"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"beeta", "=", "4"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"al", "=", "1.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bl", "=", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SpDen0", " ", "=", 
   RowBox[{"3", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Exp", "[", " ", 
       RowBox[{
        RowBox[{"-", "\[NonBreakingSpace]", 
         RowBox[{"(", 
          RowBox[{"bl", "\[NonBreakingSpace]", 
           RowBox[{"Abs", "[", " ", 
            RowBox[{"beeta", " ", "dE"}], "]"}]}], ")"}]}], " ", "+", 
        RowBox[{"0.5", " ", "beeta", " ", "dE"}]}], "]"}], " ", "-", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "al"}], ")"}], " ", 
       RowBox[{"Exp", "[", " ", 
        RowBox[{
         RowBox[{"-", "\[NonBreakingSpace]", 
          RowBox[{"(", 
           RowBox[{"al", " ", "bl", "\[NonBreakingSpace]", 
            RowBox[{"Abs", "[", " ", 
             RowBox[{"beeta", " ", "dE"}], "]"}]}], ")"}]}], " ", "+", 
         RowBox[{"0.5", " ", "beeta", " ", "dE"}]}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"corfunk0", " ", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "Pi"}], ")"}]}], ")"}], 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "I"}], " ", "t", " ", "dE"}], " ", "]"}], "SpDen0"}], 
      "\[NonBreakingSpace]\[NonBreakingSpace]", ",", " ", 
      RowBox[{"{", 
       RowBox[{"dE", ",", 
        RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{"t", ">", "0"}]}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"overt120", " ", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"Abs", "[", " ", "corfunk0", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7683229965224695`*^9, 3.768323003034849*^9}, {
   3.768323093818866*^9, 3.768323132764721*^9}, {3.7687625873242064`*^9, 
   3.7687626580232754`*^9}, 3.7687627013306055`*^9, 3.7687628726657376`*^9, {
   3.7687629207915497`*^9, 3.7687629284603167`*^9}, {3.7687629970570145`*^9, 
   3.7687629975270147`*^9}, {3.7687727835525374`*^9, 3.768772804832169*^9}, {
   3.768776683949239*^9, 3.7687766882677546`*^9}, {3.768917084792132*^9, 
   3.7689170874151316`*^9}, {3.7728150675841913`*^9, 3.7728150686096687`*^9}, 
   3.773410048235787*^9},ExpressionUUID->"c8c405ce-0dcf-4552-aa2f-\
2746173cda8f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"t12", " ", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"normaliz", " ", "=", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"t12", " ", "overt120"}], " ", ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SpDen", " ", "=", 
   RowBox[{"3", "normaliz", " ", 
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"Exp", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "bl"}], "\[NonBreakingSpace]\[NonBreakingSpace]", 
         RowBox[{"Abs", "[", " ", 
          RowBox[{"beeta", " ", "dE"}], "]"}]}], " ", "+", 
        RowBox[{"0.5", " ", "beeta", " ", "dE"}]}], "]"}], " ", "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "al"}], ")"}], " ", 
       RowBox[{"Exp", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[NonBreakingSpace]", "al"}], " ", "bl", 
          "\[NonBreakingSpace]", 
          RowBox[{"Abs", "[", " ", 
           RowBox[{"beeta", " ", "dE"}], "]"}]}], " ", "+", 
         RowBox[{"0.5", " ", "beeta", " ", "dE"}]}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"corfunk", " ", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "Pi"}], ")"}]}], ")"}], 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "I"}], " ", "t", " ", "dE"}], " ", "]"}], "SpDen"}], 
      "\[NonBreakingSpace]\[NonBreakingSpace]", ",", " ", 
      RowBox[{"{", 
       RowBox[{"dE", ",", 
        RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{"t", ">", "0"}]}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"overt12", " ", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"Abs", "[", " ", "corfunk", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t12", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{"1", "/", "overt12"}], ")"}]}], ";"}], "\n", 
 RowBox[{"tbath", " ", "=", 
  RowBox[{"t12", " ", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"t", " ", 
      RowBox[{"Abs", "[", " ", "corfunk", "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}]}]}], "Input",\

 CellChangeTimes->{{3.768322932573984*^9, 3.768322969435257*^9}, {
   3.7683231376777954`*^9, 3.7683231405725155`*^9}, {3.768323200267662*^9, 
   3.768323212814136*^9}, 3.7685744520709085`*^9, {3.7687627121696897`*^9, 
   3.768762732234696*^9}, {3.7687627677352457`*^9, 3.7687627714286146`*^9}, {
   3.768762801453617*^9, 3.768762806032075*^9}, {3.7687630059130144`*^9, 
   3.7687630063400145`*^9}, {3.768772808449791*^9, 3.768772814225211*^9}, 
   3.7688361273912497`*^9, {3.7688362409032497`*^9, 3.7688362410712495`*^9}, 
   3.7688363178842497`*^9, {3.7688499224408493`*^9, 3.768849949020849*^9}, 
   3.76885507776097*^9, 3.7688559216377797`*^9, {3.7688562109068713`*^9, 
   3.7688562110953712`*^9}, {3.768856556538336*^9, 3.7688565575630913`*^9}, 
   3.7688570845113935`*^9, 3.7689175465021315`*^9, 3.7728139778864193`*^9},
 CellLabel->
  "In[3002]:=",ExpressionUUID->"eb04e23a-ccf8-4efd-9fb6-b67162a3c474"],

Cell[BoxData["0.6857961273970326`"], "Output",
 CellChangeTimes->{3.772813979980118*^9, 3.7728993494993677`*^9, 
  3.77300752856499*^9, 3.773008243991506*^9, 3.773014034067705*^9, 
  3.7730667906671753`*^9, 3.773066872633842*^9, 3.7730703303403187`*^9, 
  3.7730716292561293`*^9, 3.7731450412948713`*^9, 3.773166630570463*^9, 
  3.77316898858605*^9, 3.773343975966585*^9, 3.773409460343315*^9, 
  3.773409923892222*^9},
 CellLabel->
  "Out[3008]=",ExpressionUUID->"4d4d4e5f-e2d5-4559-8d1a-84e1ccfd790e"]
}, Open  ]],

Cell["this code takes 922 seconds:", "Text",
 CellChangeTimes->{{3.772814020965279*^9, 3.772814041639305*^9}, {
  3.7728174569050407`*^9, 
  3.772817467948243*^9}},ExpressionUUID->"c0c64507-0fd4-4bf5-a0f7-\
1e22db00c6f2"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Timing", "[", 
   RowBox[{
    RowBox[{"ftdA", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Ainbasis", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], 
        RowBox[{"Integrate", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Conjugate", "[", "corfunk", "]"}], " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "I"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Es", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", " ", 
               RowBox[{"Es", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], ")"}], "t"}], "]"}]}], ",", 
          
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "x"}], "}"}], ",", 
          RowBox[{"Assumptions", "\[Rule]", 
           RowBox[{"x", ">", "0"}]}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"2", "^", "c"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"2", "^", "c"}]}], "}"}]}], "]"}]}], ";"}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.772814928927086*^9, 3.7728149296437893`*^9}, {
  3.77281744671702*^9, 3.772817450758829*^9}},
 CellLabel->
  "In[3009]:=",ExpressionUUID->"3064940a-2c80-4027-88e8-afc5e9a3cfcf"],

Cell["and produces this:", "Text",
 CellChangeTimes->{{3.7728174696503677`*^9, 
  3.7728174731869793`*^9}},ExpressionUUID->"ba51d95a-4854-45b8-90dc-\
3eb84e19d74f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ftdA", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.31362269158068795`"}], "+", 
          RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.13684410151692772`", " ", "\[ImaginaryI]"}]}], ")"}], 
          "-", 
          RowBox[{"1.7816354603545073`", " ", 
           RowBox[{"ArcTan", "[", 
            RowBox[{"0.22603978300179436`", " ", "x"}], "]"}]}], "+", 
          RowBox[{"1.7994518149584582`", " ", 
           RowBox[{"ArcTan", "[", 
            RowBox[{"0.22727272727274128`", " ", "x"}], "]"}]}], "-", 
          RowBox[{"1.7816354603953082`", " ", 
           RowBox[{"ArcTan", "[", 
            RowBox[{"2.3584905660377427`", " ", "x"}], "]"}]}], "+", 
          RowBox[{"1.7994518149992587`", " ", 
           RowBox[{"ArcTan", "[", 
            RowBox[{"2.4999999999999925`", " ", "x"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.8997259074996298`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"Log", "[", 
            RowBox[{"0.16000000000000095`", "\[VeryThinSpace]", "+", 
             RowBox[{"1.`", " ", 
              SuperscriptBox["x", "2"]}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.8908177301976541`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"Log", "[", 
            RowBox[{"0.17977599999999896`", "\[VeryThinSpace]", "+", 
             RowBox[{"1.`", " ", 
              SuperscriptBox["x", "2"]}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.8997259074792293`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"Log", "[", 
            RowBox[{"19.359999999997612`", "\[VeryThinSpace]", "+", 
             RowBox[{"1.`", " ", 
              SuperscriptBox["x", "2"]}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.8908177301772536`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"Log", "[", 
            RowBox[{"19.571776000002416`", "\[VeryThinSpace]", "+", 
             RowBox[{"1.`", " ", 
              SuperscriptBox["x", "2"]}]}], "]"}]}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"-", "0.037374102010989924`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2.281737025854867`"}], "+", 
            RowBox[{"0.020870993820033247`", " ", "\[ImaginaryI]"}]}], ")"}], 
          "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"7.3840693802688975`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2.005001329879431`"}], "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"4.72877672141377`", " ", "\[ImaginaryI]"}]}], ")"}], 
              " ", "x"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"6.657769927267695`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.8915106885655117`"}], "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"4.72877672141377`", " ", "\[ImaginaryI]"}]}], ")"}], 
              " ", "x"}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"9.239679970785231`*^-10", " ", "\[ImaginaryI]"}]}], 
            ")"}], " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"20.806617574219374`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"4.72877672141377`", " ", "\[ImaginaryI]"}]}], ")"}], 
              " ", "x"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"8.166711165374379`*^-10", " ", "\[ImaginaryI]"}]}], 
            ")"}], " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"20.920108215535674`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"4.72877672141377`", " ", "\[ImaginaryI]"}]}], ")"}], 
              " ", "x"}]}], "]"}]}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"-", "0.423078157410798`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.5498078242044235`"}], "+", 
            RowBox[{"0.02897361992275571`", " ", "\[ImaginaryI]"}]}], ")"}], 
          "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"3.2009250344113798`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.169116277980888`"}], "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"2.757349712219086`", " ", "\[ImaginaryI]"}]}], ")"}],
               " ", "x"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"3.025915768465912`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.1029398848876364`"}], "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"2.757349712219086`", " ", "\[ImaginaryI]"}]}], ")"}],
               " ", "x"}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"5.405655489209197`*^-6", " ", "\[ImaginaryI]"}]}], 
            ")"}], " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"12.13233873376327`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"2.757349712219086`", " ", "\[ImaginaryI]"}]}], ")"}],
               " ", "x"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"5.009414261505529`*^-6", " ", "\[ImaginaryI]"}]}], 
            ")"}], " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"12.198515126857908`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"2.757349712219086`", " ", "\[ImaginaryI]"}]}], ")"}],
               " ", "x"}]}], "]"}]}]}], ")"}]}], ",", 
       RowBox[{"0.7098092169088376`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.35793715574871365`"}], "+", 
            RowBox[{"0.0322643362993732`", " ", "\[ImaginaryI]"}]}], ")"}], 
          "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"2.6090018134009365`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "0.9646441379055591`"}], "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"2.2751040988338747`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"2.4950668780936134`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "0.9100416395335515`"}], "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"2.2751040988338747`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.00004512003654912341`", " ", "\[ImaginaryI]"}]}], 
            ")"}], " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"10.010458034868464`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"2.2751040988338747`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.00004229942903653821`", " ", "\[ImaginaryI]"}]}], 
            ")"}], " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"10.065060533241615`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"2.2751040988338747`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.037374102010989924`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3.7410381310768604`*^8"}], "-", 
            RowBox[{"0.02624006409591879`", " ", "\[ImaginaryI]"}]}], ")"}], 
          "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"1.210660334657599`*^9", " ", "\[ImaginaryI]"}]}], ")"}],
            " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "20.920108215535674`"}], "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"4.72877672141377`", " ", "\[ImaginaryI]"}]}], ")"}], 
              " ", "x"}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"1.0915793924863691`*^9", " ", "\[ImaginaryI]"}]}], 
            ")"}], " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "20.806617574219374`"}], "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"4.72877672141377`", " ", "\[ImaginaryI]"}]}], ")"}], 
              " ", "x"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.15148982857465224`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1.8915106885655117`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"4.72877672141377`", " ", "\[ImaginaryI]"}]}], ")"}], 
              " ", "x"}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.13389789239179714`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2.005001329879431`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"4.72877672141377`", " ", "\[ImaginaryI]"}]}], ")"}], 
              " ", "x"}]}], "]"}]}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.17785689443203118`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.13684410151692772`", " ", "\[ImaginaryI]"}]}], ")"}], 
          "-", 
          RowBox[{"1.7816354603545073`", " ", 
           RowBox[{"ArcTan", "[", 
            RowBox[{"0.22603978300179436`", " ", "x"}], "]"}]}], "+", 
          RowBox[{"1.7994518149584582`", " ", 
           RowBox[{"ArcTan", "[", 
            RowBox[{"0.22727272727274128`", " ", "x"}], "]"}]}], "-", 
          RowBox[{"1.7816354603953082`", " ", 
           RowBox[{"ArcTan", "[", 
            RowBox[{"2.3584905660377427`", " ", "x"}], "]"}]}], "+", 
          RowBox[{"1.7994518149992587`", " ", 
           RowBox[{"ArcTan", "[", 
            RowBox[{"2.4999999999999925`", " ", "x"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.8997259074996298`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"Log", "[", 
            RowBox[{"0.16000000000000095`", "\[VeryThinSpace]", "+", 
             RowBox[{"1.`", " ", 
              SuperscriptBox["x", "2"]}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.8908177301976541`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"Log", "[", 
            RowBox[{"0.17977599999999896`", "\[VeryThinSpace]", "+", 
             RowBox[{"1.`", " ", 
              SuperscriptBox["x", "2"]}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.8997259074792293`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"Log", "[", 
            RowBox[{"19.359999999997612`", "\[VeryThinSpace]", "+", 
             RowBox[{"1.`", " ", 
              SuperscriptBox["x", "2"]}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.8908177301772536`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"Log", "[", 
            RowBox[{"19.571776000002416`", "\[VeryThinSpace]", "+", 
             RowBox[{"1.`", " ", 
              SuperscriptBox["x", "2"]}]}], "]"}]}]}], ")"}]}], ",", 
       RowBox[{"0.8191476789389398`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "702.7301275346462`"}], "+", 
            RowBox[{"0.021606309142302677`", " ", "\[ImaginaryI]"}]}], ")"}], 
          "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"6099.222920484327`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "8.721593088677764`"}], "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"1.9714270091946844`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"5875.536973570854`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "8.674278840456104`"}], "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"1.9714270091946844`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.4564405079703547`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"0.7885708036778752`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"1.9714270091946844`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.4310369384054441`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"0.835885051898543`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"1.9714270091946844`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}]}], ")"}]}], ",", 
       RowBox[{"0.47544013200761037`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "7727.394979107484`"}], "+", 
            RowBox[{"0.008789049315602622`", " ", "\[ImaginaryI]"}]}], ")"}], 
          "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"51501.75921476231`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "10.855047682294057`"}], "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"2.4536726225798957`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"49042.05299846541`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "10.79615953935091`"}], "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"2.4536726225798957`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.3763652660544591`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"0.9814690490319601`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"2.4536726225798957`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.3513284884378401`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1.0403571919738719`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"2.4536726225798957`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.423078157410798`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "33901.42664981974`"}], "+", 
            RowBox[{"0.0017487138672251448`", " ", "\[ImaginaryI]"}]}], ")"}],
           "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"197370.64567609984`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "12.198515126857908`"}], "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"2.757349712219086`", " ", "\[ImaginaryI]"}]}], ")"}],
               " ", "x"}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"186579.4864177276`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "12.13233873376327`"}], "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"2.757349712219086`", " ", "\[ImaginaryI]"}]}], ")"}],
               " ", "x"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.3333154331267433`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1.1029398848876364`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"2.757349712219086`", " ", "\[ImaginaryI]"}]}], ")"}],
               " ", "x"}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.30888299996523466`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1.169116277980888`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"2.757349712219086`", " ", "\[ImaginaryI]"}]}], ")"}],
               " ", "x"}]}], "]"}]}]}], ")"}]}], ",", 
       RowBox[{"0.8191476789389398`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.2642829140333951`"}], "+", 
            RowBox[{"0.03486932348339758`", " ", "\[ImaginaryI]"}]}], ")"}], 
          "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"2.2937972113257783`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "0.835885051898543`"}], "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"1.9714270091946844`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"2.209673347039488`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "0.7885708036778752`"}], "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"1.9714270091946844`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.0001716582551458025`", " ", "\[ImaginaryI]"}]}], 
            ")"}], " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"8.674278840456104`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"1.9714270091946844`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.00016210447464246774`", " ", "\[ImaginaryI]"}]}], 
            ")"}], " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"8.721593088677764`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"1.9714270091946844`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.0699164064500365`"}], "+", 
          RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.13684410151692772`", " ", "\[ImaginaryI]"}]}], ")"}], 
          "-", 
          RowBox[{"1.7816354603545073`", " ", 
           RowBox[{"ArcTan", "[", 
            RowBox[{"0.22603978300179436`", " ", "x"}], "]"}]}], "+", 
          RowBox[{"1.7994518149584582`", " ", 
           RowBox[{"ArcTan", "[", 
            RowBox[{"0.22727272727274128`", " ", "x"}], "]"}]}], "-", 
          RowBox[{"1.7816354603953082`", " ", 
           RowBox[{"ArcTan", "[", 
            RowBox[{"2.3584905660377427`", " ", "x"}], "]"}]}], "+", 
          RowBox[{"1.7994518149992587`", " ", 
           RowBox[{"ArcTan", "[", 
            RowBox[{"2.4999999999999925`", " ", "x"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.8997259074996298`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"Log", "[", 
            RowBox[{"0.16000000000000095`", "\[VeryThinSpace]", "+", 
             RowBox[{"1.`", " ", 
              SuperscriptBox["x", "2"]}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.8908177301976541`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"Log", "[", 
            RowBox[{"0.17977599999999896`", "\[VeryThinSpace]", "+", 
             RowBox[{"1.`", " ", 
              SuperscriptBox["x", "2"]}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.8997259074792293`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"Log", "[", 
            RowBox[{"19.359999999997612`", "\[VeryThinSpace]", "+", 
             RowBox[{"1.`", " ", 
              SuperscriptBox["x", "2"]}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.8908177301772536`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"Log", "[", 
            RowBox[{"19.571776000002416`", "\[VeryThinSpace]", "+", 
             RowBox[{"1.`", " ", 
              SuperscriptBox["x", "2"]}]}], "]"}]}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"-", "0.3664808526358411`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.042790667213441366`"}], "+", 
            RowBox[{"0.06799139620820281`", " ", "\[ImaginaryI]"}]}], ")"}], 
          "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"8.396191052668415`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2.1334545936162925`"}], "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"0.4822456133852113`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"8.382570360257976`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2.1218806988948056`"}], "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"0.4822456133852113`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.8280975221183557`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"0.1928982453540849`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"0.4822456133852113`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.8104638209270233`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"0.20447214007532882`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"0.4822456133852113`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.7098092169088376`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3206.7670041341144`"}], "+", 
            RowBox[{"0.013304917509665498`", " ", "\[ImaginaryI]"}]}], ")"}], 
          "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"23374.105744982073`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "10.065060533241615`"}], "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"2.2751040988338747`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"22353.360104878207`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "10.010458034868464`"}], "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"2.2751040988338747`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.404231419136099`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"0.9100416395335515`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"2.2751040988338747`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.37896153318651216`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"0.9646441379055591`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"2.2751040988338747`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}]}], ")"}]}], ",", 
       RowBox[{"0.47544013200761037`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.42224760007398693`"}], "+", 
            RowBox[{"0.03094408505920431`", " ", "\[ImaginaryI]"}]}], ")"}], 
          "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"2.814207671256753`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.0403571919738719`"}], "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"2.4536726225798957`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"2.6798020857358233`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "0.9814690490319601`"}], "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"2.4536726225798957`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.000020565705619203618`", " ", "\[ImaginaryI]"}]}], 
            ")"}], " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"10.79615953935091`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"2.4536726225798957`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.000019197622417701956`", " ", "\[ImaginaryI]"}]}], 
            ")"}], " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"10.855047682294057`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"2.4536726225798957`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"-", "0.3664808526358411`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.006217311438552488`"}], "+", 
            RowBox[{"0.06430634074495428`", " ", "\[ImaginaryI]"}]}], ")"}], 
          "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"1.2199327123102217`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "0.20447214007532882`"}], "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"0.4822456133852113`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"1.217953680613847`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "0.1928982453540849`"}], "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"0.4822456133852113`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.12031923164159185`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2.1218806988948056`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"0.4822456133852113`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.11775712594560174`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2.1334545936162925`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.`", "\[VeryThinSpace]", "+", 
                RowBox[{"0.4822456133852113`", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", "x"}]}], "]"}]}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.2056822035986929`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.13684410151692772`", " ", "\[ImaginaryI]"}]}], ")"}], 
          "-", 
          RowBox[{"1.7816354603545073`", " ", 
           RowBox[{"ArcTan", "[", 
            RowBox[{"0.22603978300179436`", " ", "x"}], "]"}]}], "+", 
          RowBox[{"1.7994518149584582`", " ", 
           RowBox[{"ArcTan", "[", 
            RowBox[{"0.22727272727274128`", " ", "x"}], "]"}]}], "-", 
          RowBox[{"1.7816354603953082`", " ", 
           RowBox[{"ArcTan", "[", 
            RowBox[{"2.3584905660377427`", " ", "x"}], "]"}]}], "+", 
          RowBox[{"1.7994518149992587`", " ", 
           RowBox[{"ArcTan", "[", 
            RowBox[{"2.4999999999999925`", " ", "x"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.8997259074996298`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"Log", "[", 
            RowBox[{"0.16000000000000095`", "\[VeryThinSpace]", "+", 
             RowBox[{"1.`", " ", 
              SuperscriptBox["x", "2"]}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.8908177301976541`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"Log", "[", 
            RowBox[{"0.17977599999999896`", "\[VeryThinSpace]", "+", 
             RowBox[{"1.`", " ", 
              SuperscriptBox["x", "2"]}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.8997259074792293`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"Log", "[", 
            RowBox[{"19.359999999997612`", "\[VeryThinSpace]", "+", 
             RowBox[{"1.`", " ", 
              SuperscriptBox["x", "2"]}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.8908177301772536`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           RowBox[{"Log", "[", 
            RowBox[{"19.571776000002416`", "\[VeryThinSpace]", "+", 
             RowBox[{"1.`", " ", 
              SuperscriptBox["x", "2"]}]}], "]"}]}]}], ")"}]}]}], "}"}]}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.772817420469069*^9, 3.772817422316319*^9}},
 CellLabel->
  "In[3010]:=",ExpressionUUID->"c218a418-ed93-4f73-b470-bc8d6bfcf3c9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"t12factor", "=", "tbath"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t12", "=", 
   RowBox[{"t12factor", " ", "10"}]}], " ", ";"}], "\n", 
 RowBox[{
  RowBox[{"normaliz", " ", "=", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"t12", " ", "overt120"}], " ", ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SpDen", " ", "=", 
   RowBox[{"3", "normaliz", " ", 
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"Exp", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "bl"}], "\[NonBreakingSpace]\[NonBreakingSpace]", 
         RowBox[{"Abs", "[", " ", 
          RowBox[{"beeta", " ", "dE"}], "]"}]}], " ", "+", 
        RowBox[{"0.5", " ", "beeta", " ", "dE"}]}], "]"}], " ", "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "al"}], ")"}], " ", 
       RowBox[{"Exp", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[NonBreakingSpace]", "al"}], " ", "bl", 
          "\[NonBreakingSpace]", 
          RowBox[{"Abs", "[", " ", 
           RowBox[{"beeta", " ", "dE"}], "]"}]}], " ", "+", 
         RowBox[{"0.5", " ", "beeta", " ", "dE"}]}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"corfunk", " ", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "Pi"}], ")"}]}], ")"}], 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "I"}], " ", "t", " ", "dE"}], " ", "]"}], "SpDen"}], 
      "\[NonBreakingSpace]\[NonBreakingSpace]", ",", " ", 
      RowBox[{"{", 
       RowBox[{"dE", ",", 
        RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{"t", ">", "0"}]}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"overt12", " ", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"Abs", "[", " ", "corfunk", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t12", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{"1", "/", "overt12"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"tbath", " ", "=", 
   RowBox[{"t12", " ", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"t", " ", 
       RowBox[{"Abs", "[", " ", "corfunk", "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"sol", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"rhoMat", "'"}], "[", "x", "]"}], " ", "==", " ", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"I", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"rhoMat", "[", "x", "]"}], ".", "S", ".", "H", ".", 
              "Sd"}], " ", "-", 
             RowBox[{"S", ".", "H", ".", "Sd", ".", 
              RowBox[{"rhoMat", "[", "x", "]"}]}]}], ")"}]}], "  ", "+", " ", 
          
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "/", "t12factor"}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Ainbasis", ".", 
              RowBox[{"rhoMat", "[", "x", "]"}], ".", "ftdA"}], " ", "+", 
             RowBox[{
              RowBox[{"Conjugate", "[", 
               RowBox[{"Transpose", "[", "ftdA", "]"}], "]"}], ".", 
              RowBox[{"rhoMat", "[", "x", "]"}], ".", "Ainbasis"}], " ", "-", 
             
             RowBox[{
              RowBox[{"rhoMat", "[", "x", "]"}], ".", "ftdA", ".", 
              "Ainbasis"}], "-", 
             RowBox[{"Ainbasis", ".", 
              RowBox[{"Conjugate", "[", 
               RowBox[{"Transpose", "[", "ftdA", "]"}], "]"}], ".", 
              RowBox[{"rhoMat", "[", "x", "]"}]}]}], ")"}]}]}], ")"}]}], ",", 
       " ", "\n", "\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]", 
       RowBox[{
        RowBox[{"rhoMat", "[", "0", "]"}], " ", "==", " ", 
        RowBox[{"S", ".", "rhoIn", ".", "Sd"}]}]}], "}"}], ",", " ", 
     RowBox[{"{", "rhoMat", "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", 
       RowBox[{"3.0", "t12"}]}], "}"}], ",", 
     RowBox[{"MaxSteps", "\[Rule]", "100000"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SolORedfield", "  ", "=", 
   RowBox[{"rhoMat", " ", "/.", " ", 
    RowBox[{"sol", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.773072972883823*^9, 3.773073616157598*^9, {3.7731654774265013`*^9, 
   3.773165479218199*^9}, {3.773168904685874*^9, 3.773168905428257*^9}, {
   3.773168945972245*^9, 3.773168947289403*^9}, {3.773241215691403*^9, 
   3.773241239710826*^9}},
 CellLabel->
  "In[3011]:=",ExpressionUUID->"82b6dc60-cdd8-4a90-9627-3dd4b94e0434"],

Cell["confirming positivity of the solution:", "Text",
 CellChangeTimes->{{3.7731689312580967`*^9, 
  3.773168939287466*^9}},ExpressionUUID->"93baa6e1-4a03-484f-8edf-\
2754b83c58bf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Re", "[", 
  RowBox[{"Eigenvalues", "[", 
   RowBox[{"SolORedfield", "[", 
    RowBox[{"2.56", "t12"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7730728890021772`*^9, 3.773072954635359*^9}, {
  3.773072991178873*^9, 3.773073004513234*^9}, {3.773073639359489*^9, 
  3.773073658245913*^9}, {3.773241262171617*^9, 3.7732412954957542`*^9}},
 CellLabel->
  "In[3021]:=",ExpressionUUID->"0a3b6423-5375-4089-bed8-179e21a41b16"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.7703091897950428`", ",", "0.16904371359619835`", ",", 
   "0.060562968975638315`", ",", "0.00008412763312040197`"}], "}"}]], "Output",\

 CellChangeTimes->{{3.7730728987767553`*^9, 3.7730729551067877`*^9}, {
   3.7730729857225*^9, 3.773073004786351*^9}, {3.773073636118868*^9, 
   3.7730736585668697`*^9}, 3.773145052322463*^9, 3.77316551301665*^9, 
   3.773166642710318*^9, 3.773168998328279*^9, {3.773241269098531*^9, 
   3.773241295815358*^9}, 3.7733439840827827`*^9, 3.773409468184836*^9, 
   3.7734099318488493`*^9},
 CellLabel->
  "Out[3021]=",ExpressionUUID->"60ba2e30-0337-4be3-9e82-110cc868ae65"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"timeConst", " ", "=", " ", "2.56"}], " ", ";"}]], "Input",
 CellLabel->
  "In[3022]:=",ExpressionUUID->"2e5e2b07-04d6-4d20-a344-d2790debb0f1"],

Cell["This takes an hour:", "Text",
 CellChangeTimes->{{3.7732509635321503`*^9, 
  3.773250968794142*^9}},ExpressionUUID->"baa4cb66-81ec-4759-9c97-\
d2845f057913"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Timing", "[", 
    RowBox[{
     RowBox[{"justmaxNormTable6", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"potenMax", "=", "0"}], ";", "\[IndentingNewLine]", 
         RowBox[{"precalc", "=", 
          RowBox[{"(", 
           RowBox[{"ftdA", "/.", 
            RowBox[{"x", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{"timeConst", " ", "t12", " ", 
               RowBox[{"tLimit", "/", "100"}]}], ")"}]}]}], ")"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"m", "=", "1"}], ",", 
           RowBox[{"m", "<", "300000"}], ",", 
           RowBox[{"m", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"randMat", " ", "=", " ", 
             RowBox[{"RandomVariate", "[", 
              RowBox[{"GaussianUnitaryMatrixDistribution", "[", 
               RowBox[{"2", "^", "c"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"evalues", "=", 
             RowBox[{"Eigenvalues", "[", "randMat", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"randDenMat", "=", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"Total", "[", 
                 RowBox[{"Abs", "[", "evalues", "]"}], "]"}]}], ")"}], 
              "randMat"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"matRHS", " ", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "/", "t12factor"}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Ainbasis", ".", "randDenMat", ".", "precalc"}], "  ",
                 "+", 
                RowBox[{
                 RowBox[{"ConjugateTranspose", "[", "precalc", "]"}], ".", 
                 "randDenMat", ".", "Ainbasis"}], " ", "-", 
                RowBox[{"randDenMat", ".", "precalc", ".", "Ainbasis"}], "-", 
                
                RowBox[{"Ainbasis", ".", 
                 RowBox[{"ConjugateTranspose", "[", "precalc", "]"}], ".", 
                 "randDenMat"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"candidMax", "=", 
             RowBox[{"Total", "[", 
              RowBox[{"Abs", "[", 
               RowBox[{"Eigenvalues", "[", "matRHS", " ", "]"}], "]"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"candidMax", ">", "potenMax"}], ",", 
              RowBox[{"potenMax", "=", "candidMax"}], ",", "0"}], "]"}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]",
          "potenMax"}], ",", 
        RowBox[{"{", 
         RowBox[{"tLimit", ",", "1", ",", "100"}], "}"}]}], "]"}]}], ";"}], 
    "]"}], "*)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.773170782601269*^9, 3.773170809105344*^9}, {
   3.7731765566659403`*^9, 3.77317656432476*^9}, {3.773176656629225*^9, 
   3.773176689184099*^9}, {3.7731775214846*^9, 3.773177550531579*^9}, 
   3.773179743346518*^9, {3.773179795714361*^9, 3.7731798014503603`*^9}, {
   3.773179831713477*^9, 3.773179835133624*^9}, {3.773180204142519*^9, 
   3.7731802053391447`*^9}, {3.77318169276031*^9, 3.773181745553748*^9}, {
   3.773181775699489*^9, 3.773181837837627*^9}, {3.7731819292017393`*^9, 
   3.773181951438489*^9}, {3.773182166237186*^9, 3.773182166538376*^9}, {
   3.773243990724931*^9, 3.773244040114743*^9}, {3.7732510055253487`*^9, 
   3.773251017906395*^9}, 
   3.773409941275237*^9},ExpressionUUID->"a831da6d-8a8f-46b0-b9a8-\
d15c3957717b"],

Cell["and evaluates to:", "Text",
 CellChangeTimes->{{3.773250972254546*^9, 
  3.7732509769668417`*^9}},ExpressionUUID->"f775a406-6fb1-4083-bbed-\
0ad3039b9d47"],

Cell[BoxData[
 RowBox[{
  RowBox[{"justmaxNormTable6", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.13625277658247434`", ",", "0.2271261344323564`", ",", 
     "0.28727220371273887`", ",", "0.33250075951551983`", ",", 
     "0.37029397627774663`", ",", "0.40271754332189424`", ",", 
     "0.40736594015237887`", ",", "0.4180157958878515`", ",", 
     "0.41860082347820327`", ",", "0.43447242500347016`", ",", 
     "0.4195251202025071`", ",", "0.4059369283625248`", ",", 
     "0.41226636665407357`", ",", "0.408973506686298`", ",", 
     "0.4183873286714153`", ",", "0.4195517010133962`", ",", 
     "0.401094534970432`", ",", "0.401155274225066`", ",", 
     "0.413560748746326`", ",", "0.4231838472412014`", ",", 
     "0.40873350800205266`", ",", "0.42933439966666376`", ",", 
     "0.4237282137451651`", ",", "0.4083252161470393`", ",", 
     "0.41293133259795667`", ",", "0.4102754192049166`", ",", 
     "0.4256014331887795`", ",", "0.40026223764204594`", ",", 
     "0.4129022480082211`", ",", "0.41210834427859494`", ",", 
     "0.4153898179708457`", ",", "0.4037183147082594`", ",", 
     "0.421782077126944`", ",", "0.4126848644186196`", ",", 
     "0.4050789600131528`", ",", "0.4091116325314532`", ",", 
     "0.41872224846964234`", ",", "0.4061493257980902`", ",", 
     "0.40467090710900866`", ",", "0.42084714692887154`", ",", 
     "0.40874710912888246`", ",", "0.40760977891683914`", ",", 
     "0.4198083866915851`", ",", "0.408875129709536`", ",", 
     "0.40234178980270807`", ",", "0.40492563750766025`", ",", 
     "0.4090303549988218`", ",", "0.41905118707215583`", ",", 
     "0.41478640675597195`", ",", "0.41578211939801946`", ",", 
     "0.4191110585031859`", ",", "0.40632719851988364`", ",", 
     "0.4125404241195417`", ",", "0.4066260107072258`", ",", 
     "0.40862103701067976`", ",", "0.4134745819147972`", ",", 
     "0.4134943846835991`", ",", "0.40536129477936683`", ",", 
     "0.4053602826787508`", ",", "0.4174292619400807`", ",", 
     "0.42382693416697304`", ",", "0.41190946156765346`", ",", 
     "0.4126215243665926`", ",", "0.4249809424641092`", ",", 
     "0.4184781069055633`", ",", "0.4177719957178938`", ",", 
     "0.41288195349517276`", ",", "0.4183794867645572`", ",", 
     "0.43769373898380803`", ",", "0.41985704400941815`", ",", 
     "0.4066249406963439`", ",", "0.41287201323125466`", ",", 
     "0.4151571814386592`", ",", "0.4144238051631125`", ",", 
     "0.40615909870455735`", ",", "0.41440359539072485`", ",", 
     "0.42245499124682556`", ",", "0.4224370154279492`", ",", 
     "0.40468432425134093`", ",", "0.4149066713080723`", ",", 
     "0.41053925472608`", ",", "0.4115861709600311`", ",", 
     "0.41143142473472477`", ",", "0.4165591316686071`", ",", 
     "0.41646587975266974`", ",", "0.41886210290025316`", ",", 
     "0.40722391754742965`", ",", "0.42317839274224434`", ",", 
     "0.41156868425013915`", ",", "0.4078385937317991`", ",", 
     "0.42438270358532443`", ",", "0.418301606199013`", ",", 
     "0.4111458531544227`", ",", "0.4124354847298125`", ",", 
     "0.4120240671142553`", ",", "0.4071288205436841`", ",", 
     "0.41221409174985346`", ",", "0.41680648014423394`", ",", 
     "0.4086568943784156`", ",", "0.4150229124932491`"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7732509847861147`*^9, 3.773250998538212*^9}},
 CellLabel->
  "In[3024]:=",ExpressionUUID->"96ae3404-47ab-4140-b0e6-2a4b75d27f1d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", "justmaxNormTable6", "]"}]], "Input",
 CellChangeTimes->{{3.773248299590199*^9, 3.773248305934701*^9}},
 CellLabel->
  "In[3025]:=",ExpressionUUID->"ad7943b1-f291-4cb1-a179-d2caedc7f3f6"],

Cell[BoxData["0.43769373898380803`"], "Output",
 CellChangeTimes->{3.77324830828301*^9, 3.773343984157021*^9, 
  3.7734094917731247`*^9, 3.77340993188696*^9},
 CellLabel->
  "Out[3025]=",ExpressionUUID->"a42cb053-e8e0-4990-b434-bd80d6f4a60b"]
}, Open  ]],

Cell["\<\
we believe this bruteforce search finds the maximum norm of the r.h.s to 0.01 \
precision, which results in 3% accuracy in t12effective, and 1.5% accuracy in \
Tave for CGME. That is enough for making the choice of Tave. The analysis \
that leads to a 0.01 error bar on the computation below involves \
extrapolation to infinite number of samples (the convergence to the true \
maximum is weaker than any polinomial in the number of samples) and is not \
presented here.

We have tried more sophisticated optimization methods like Monte-Carlo or \
Simulated Annealing, but did not observe a significant improvement in the \
runtime. We proceed using the obtained value to adjust t12:\
\>", "Text",
 CellChangeTimes->{{3.773240606302593*^9, 3.7732408679290533`*^9}, {
  3.773240934717154*^9, 3.773240971997106*^9}, {3.7732510291453114`*^9, 
  3.773251040241479*^9}},ExpressionUUID->"d4b59f5b-9fb8-44c3-8fb6-\
e850e8e45633"],

Cell[CellGroupData[{

Cell[BoxData["t12effective"], "Input",
 CellLabel->
  "In[3026]:=",ExpressionUUID->"69af36b6-0b6c-4f96-9631-5167eb497ee4"],

Cell[BoxData["9.13881018560326`"], "Output",
 CellChangeTimes->{3.773363563869029*^9, 3.773409491782119*^9, 
  3.773409931894723*^9},
 CellLabel->
  "Out[3026]=",ExpressionUUID->"696bc66f-02a8-4097-bfd4-81a1db7df178"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t12effective", "/", "t12"}]], "Input",
 CellChangeTimes->{{3.773363553489181*^9, 3.773363554114448*^9}},
 CellLabel->
  "In[3027]:=",ExpressionUUID->"1e323322-df77-44db-96b4-ef6a3ed7303e"],

Cell[BoxData["1.3325841048840557`"], "Output",
 CellChangeTimes->{{3.773363531165807*^9, 3.773363554366379*^9}, 
   3.773409491803027*^9, 3.773409931911208*^9},
 CellLabel->
  "Out[3027]=",ExpressionUUID->"f2ca0581-4c0d-41ac-b5d4-1566f8268200"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"t12effective", " ", "=", 
   RowBox[{"4", "/", 
    RowBox[{"Max", "[", "justmaxNormTable6", "]"}]}]}], ";"}], "\n", 
 RowBox[{"boostEffective", " ", "=", " ", 
  RowBox[{"Sqrt", "[", 
   RowBox[{"t12effective", "/", "t12"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.773240533331889*^9, 3.77324053351234*^9}, {
   3.7732405747829657`*^9, 3.7732405888802032`*^9}, {3.773241300213768*^9, 
   3.773241300337545*^9}, 3.773250848028511*^9, {3.7732509192044907`*^9, 
   3.773250933797584*^9}, {3.773251070386795*^9, 3.7732510708413067`*^9}},
 CellLabel->
  "In[3028]:=",ExpressionUUID->"7d3c41a9-3215-4fe6-9232-1040295a701f"],

Cell[BoxData["1.1543760673558923`"], "Output",
 CellChangeTimes->{3.773250938053604*^9, 3.7732510751448193`*^9, 
  3.773343984165793*^9, 3.773409491811142*^9, 3.773409931919345*^9},
 CellLabel->
  "Out[3029]=",ExpressionUUID->"17f5e5af-1efc-4a17-a6c2-59e71e7b4b0d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    RowBox[{"filterRedplus", "=", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Conjugate", "[", "corfunk", "]"}], " ", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "y"}], " ", "I", " ", "t"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}], ",", 
       RowBox[{"Assumptions", "\[Rule]", " ", 
        RowBox[{"y", " ", ">", "0"}]}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"filterRedminus", "=", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Conjugate", "[", "corfunk", "]"}], " ", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "y"}], " ", "I", " ", "t"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}], ",", 
       RowBox[{"Assumptions", "\[Rule]", " ", 
        RowBox[{"y", " ", "<", "0"}]}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"zeMat", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"zeInit", " ", "=", 
     RowBox[{"At", "[", 
      RowBox[{"zeMat", ",", "1"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"termsL", "=", 
     RowBox[{"I", "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"pMat", "[", "x", "]"}], ".", "S", ".", "H", ".", "Sd"}], 
        " ", "-", 
        RowBox[{"S", ".", "H", ".", "Sd", ".", 
         RowBox[{"pMat", "[", "x", "]"}]}]}], ")"}]}]}], " ", ";"}], "\n", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<", 
       RowBox[{
        RowBox[{"2", "^", "c"}], " ", "+", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\n", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", 
        RowBox[{"j", "<", 
         RowBox[{
          RowBox[{"2", "^", "c"}], " ", "+", "1"}]}], ",", 
        RowBox[{"j", "++"}], ",", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "==", "j"}], ")"}], "&&", 
           RowBox[{"(", 
            RowBox[{"i", "<", 
             RowBox[{"2", "^", "c"}]}], ")"}]}], ",", "0", ",", 
          RowBox[{
           RowBox[{"a", "=", "zeInit"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"i", "\[Equal]", "j"}], ")"}], "&&", 
              RowBox[{"(", 
               RowBox[{"i", "\[Equal]", 
                RowBox[{"2", "^", "c"}]}], ")"}]}], ",", 
             RowBox[{
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"m", "=", "1"}], ",", 
                RowBox[{"m", "<", 
                 RowBox[{
                  RowBox[{"2", "^", "c"}], " ", "+", "1"}]}], ",", 
                RowBox[{"m", "++"}], ",", "\n", 
                RowBox[{
                 RowBox[{
                  RowBox[{"a", "[", 
                   RowBox[{"[", 
                    RowBox[{"m", ",", "m"}], "]"}], "]"}], " ", "=", " ", 
                  RowBox[{"Ainbasis", "[", 
                   RowBox[{"[", 
                    RowBox[{"m", ",", "m"}], "]"}], "]"}]}], " ", ";"}]}], 
               "\n", "]"}], ";"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"a", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}], " ", "=", " ", 
               RowBox[{"Ainbasis", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}]}], " ", ";"}]}], "\n", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"ad", " ", "=", " ", 
            RowBox[{"ConjugateTranspose", "[", "a", "]"}]}], ";", "\n", 
           RowBox[{"termsL", "=", 
            RowBox[{"termsL", "+", 
             RowBox[{
              RowBox[{"Re", "[", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Es", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "-", " ", 
                    RowBox[{"Es", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], " ", "+", " ", 
                    "0.00000001"}], ")"}], ">", "0"}], ",", 
                 RowBox[{"filterRedplus", " ", "/.", 
                  RowBox[{"y", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Es", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "-", " ", 
                    RowBox[{"Es", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], " ", "+", " ", 
                    "0.00000001"}], ")"}]}]}], ",", 
                 RowBox[{"filterRedminus", "/.", 
                  RowBox[{"y", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Es", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "-", " ", 
                    RowBox[{"Es", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], " ", ")"}]}]}]}], "]"}],
                "]"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"a", ".", 
                  RowBox[{"pMat", "[", "x", "]"}], ".", "ad"}]}], 
                "\[NonBreakingSpace]\[NonBreakingSpace]", "-", " ", 
                RowBox[{"ad", ".", "a", ".", 
                 RowBox[{"pMat", "[", "x", "]"}]}], " ", "-", " ", 
                RowBox[{
                 RowBox[{"pMat", "[", "x", "]"}], ".", "ad", ".", " ", 
                 "a"}]}], 
               "\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]", 
               ")"}]}], " ", "-", 
             RowBox[{"I", " ", 
              RowBox[{"Im", "[", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Es", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "-", " ", 
                    RowBox[{"Es", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], " ", "+", " ", 
                    "0.00000001"}], ")"}], ">", "0"}], ",", 
                 RowBox[{"filterRedplus", " ", "/.", 
                  RowBox[{"y", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Es", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "-", " ", 
                    RowBox[{"Es", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], " ", "+", " ", 
                    "0.00000001"}], ")"}]}]}], ",", 
                 RowBox[{"filterRedminus", "/.", 
                  RowBox[{"y", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Es", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "-", " ", 
                    RowBox[{"Es", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], " ", ")"}]}]}]}], "]"}],
                "]"}], " ", 
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"ad", ".", "a", ".", 
                  RowBox[{"pMat", "[", "x", "]"}]}]}], " ", "+", " ", 
                RowBox[{
                 RowBox[{"pMat", "[", "x", "]"}], ".", "ad", ".", " ", 
                 "a"}]}], "\[NonBreakingSpace]", ")"}]}]}]}], 
           "\[NonBreakingSpace]", ";"}]}], "]"}]}], "]"}]}], "]"}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"pIn", " ", "=", 
     RowBox[{"S", ".", "rhoIn", ".", "Sd"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"s", " ", "=", " ", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"pMat", "'"}], "[", "x", "]"}], " ", "==", " ", "termsL"}],
          ",", " ", "\n", "\[NonBreakingSpace]\[NonBreakingSpace] ", 
         RowBox[{
          RowBox[{"pMat", "[", "0", "]"}], " ", "==", " ", "pIn"}]}], "}"}], 
       ",", " ", 
       RowBox[{"{", "pMat", "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", 
         RowBox[{"timeConst", " ", "t12"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Lindsol", " ", "=", 
     RowBox[{"pMat", "/.", 
      RowBox[{"s", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"denmatDif2", "=", 
     RowBox[{
      RowBox[{"SolORedfield", "[", 
       RowBox[{"x", " ", "t12"}], "]"}], "-", 
      RowBox[{"Lindsol", "[", 
       RowBox[{"x", " ", "t12"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"traceNorm2", "=", 
     RowBox[{"Re", "[", 
      RowBox[{"Tr", "[", 
       RowBox[{"MatrixPower", "[", 
        RowBox[{
         RowBox[{"denmatDif2", ".", 
          RowBox[{"ConjugateTranspose", "[", "denmatDif2", " ", "]"}]}], ",", 
         
         RowBox[{"1", "/", "2"}]}], "]"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"sol", " ", "=", " ", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"rhoMat", "'"}], "[", "x", "]"}], " ", "==", " ", 
          RowBox[{"I", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"rhoMat", "[", "x", "]"}], ".", "S", ".", "H", ".", 
              "Sd"}], " ", "-", 
             RowBox[{"S", ".", "H", ".", "Sd", ".", 
              RowBox[{"rhoMat", "[", "x", "]"}]}]}], ")"}]}]}], " ", ",", " ",
          "\n", "\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]", 
         RowBox[{
          RowBox[{"rhoMat", "[", "0", "]"}], " ", "==", " ", 
          RowBox[{"S", ".", "rhoIn", ".", "Sd"}]}]}], "}"}], ",", " ", 
       RowBox[{"{", "rhoMat", "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", 
         RowBox[{"timeConst", " ", "t12"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SolIsol", "  ", "=", 
     RowBox[{"rhoMat", " ", "/.", " ", 
      RowBox[{"sol", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"denmatDifISca", "=", 
     RowBox[{
      RowBox[{"SolORedfield", "[", 
       RowBox[{"t12", " ", "x"}], "]"}], "-", 
      RowBox[{"SolIsol", "[", 
       RowBox[{"t12", " ", "x"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"traceNormISca", "=", 
     RowBox[{"Re", "[", 
      RowBox[{"Tr", "[", 
       RowBox[{"MatrixPower", "[", 
        RowBox[{
         RowBox[{"denmatDifISca", ".", 
          RowBox[{"ConjugateTranspose", "[", "denmatDifISca", " ", "]"}]}], 
         ",", 
         RowBox[{"1", "/", "2"}]}], "]"}], "]"}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"davNo", " ", "=", " ", 
     RowBox[{
      RowBox[{"NIntegrate", "[", 
       RowBox[{"traceNorm2", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "timeConst"}], " ", "}"}]}], "]"}], "/", 
      "timeConst"}]}], " ", ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7731689233822317`*^9, 3.773168927280785*^9}, 
   3.773240522365744*^9},
 CellLabel->
  "In[3030]:=",ExpressionUUID->"cab418ab-fa16-4e9e-8f4d-5c7a0261525b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"boostEffective", " ", 
  RowBox[{"Sqrt", "[", 
   RowBox[{"t12", " ", 
    RowBox[{"tbath", "/", "5"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[3046]:=",ExpressionUUID->"0e428eb9-a46f-4dba-9d71-e4f82c41ecce"],

Cell[BoxData["1.1195856942908184`"], "Output",
 CellChangeTimes->{3.773363630967597*^9, 3.773409499174024*^9, 
  3.7734099391018267`*^9},
 CellLabel->
  "Out[3046]=",ExpressionUUID->"9826d79b-3373-4fe1-ad62-2290de3f27e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"factorTave", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tave", " ", "=", " ", 
    RowBox[{"factorTave", " ", "boostEffective", " ", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"t12", " ", 
       RowBox[{"tbath", "/", "5"}]}], "]"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"filter2", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Sin", "[", 
       RowBox[{"Tave", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"eps", " ", "-", " ", "omeg"}], ")"}], "/", "2"}]}], "]"}], 
      ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"Tave", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"eps", " ", "-", " ", "omeg"}], ")"}], "/", "2"}]}], 
      ")"}]}]}], ";"}], "\n", "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Hls", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"omP", " ", "=", 
          RowBox[{
           RowBox[{"Es", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "-", 
           RowBox[{"Es", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], ";", " ", 
         RowBox[{"om", " ", "=", " ", 
          RowBox[{
           RowBox[{"Es", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "-", 
           RowBox[{"Es", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}]}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"om", " ", "+", "omP"}], " ", "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"(", "Tave", "  ", ")"}]}], ")"}], 
            RowBox[{"Re", "[", 
             RowBox[{"NIntegrate", "[", 
              RowBox[{
               RowBox[{"I", 
                RowBox[{"(", 
                 RowBox[{"t", "-", "Tave"}], ")"}], " ", 
                RowBox[{"Exp", "[", 
                 RowBox[{"I", " ", "om", " ", "t"}], " ", "]"}], " ", 
                "corfunk"}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", "Tave"}], "}"}]}], "]"}], "]"}], 
            RowBox[{"Ainbasis", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "k"}], "]"}], "]"}], 
            RowBox[{"Ainbasis", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "j"}], "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"Tave", " ", 
                RowBox[{"(", 
                 RowBox[{"om", " ", "+", " ", "omP"}], ")"}]}], " ", ")"}]}], 
             ")"}], 
            RowBox[{"Re", "[", 
             RowBox[{"NIntegrate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"I", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"om", " ", "t"}], " ", "-", " ", 
                    RowBox[{"Tave", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"om", " ", "+", "omP"}], ")"}], "/", "2"}]}]}], 
                    ")"}]}], "]"}], " ", "-", " ", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"-", "I"}], 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"omP", " ", "t"}], " ", "-", " ", 
                    RowBox[{"Tave", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"om", " ", "+", "omP"}], ")"}], "/", "2"}]}]}], 
                    ")"}]}], "]"}]}], ")"}], "corfunk"}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", "Tave"}], "}"}]}], "]"}], "]"}], 
            RowBox[{"Ainbasis", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "k"}], "]"}], "]"}], 
            RowBox[{"Ainbasis", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "j"}], "]"}], "]"}]}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", 
          RowBox[{"2", "^", "c"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"2", "^", "c"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"2", "^", "c"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"zeMat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"zeInit", " ", "=", 
   RowBox[{"At", "[", 
    RowBox[{"zeMat", ",", "1"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"termsC", "=", 
   RowBox[{"I", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"pMat", "[", "x", "]"}], ".", "S", ".", "H", ".", "Sd"}], " ", 
      "-", 
      RowBox[{"S", ".", "H", ".", "Sd", ".", 
       RowBox[{"pMat", "[", "x", "]"}]}]}], ")"}]}]}], "  ", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "<", 
      RowBox[{
       RowBox[{"2", "^", "c"}], " ", "+", "1"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\n", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "<", 
        RowBox[{
         RowBox[{"2", "^", "c"}], " ", "+", "1"}]}], ",", 
       RowBox[{"j", "++"}], ",", "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"i", "==", "j"}], ")"}], "&&", 
          RowBox[{"(", 
           RowBox[{"i", "<", 
            RowBox[{"2", "^", "c"}]}], ")"}]}], ",", "0", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"a", "=", "zeInit"}], ";", "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "\[Equal]", "j"}], ")"}], "&&", 
             RowBox[{"(", 
              RowBox[{"i", "\[Equal]", 
               RowBox[{"2", "^", "c"}]}], ")"}]}], ",", 
            RowBox[{
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"m", "=", "1"}], ",", 
               RowBox[{"m", "<", 
                RowBox[{
                 RowBox[{"2", "^", "c"}], " ", "+", "1"}]}], ",", 
               RowBox[{"m", "++"}], ",", "\n", 
               RowBox[{
                RowBox[{
                 RowBox[{"a", "[", 
                  RowBox[{"[", 
                   RowBox[{"m", ",", "m"}], "]"}], "]"}], " ", "=", " ", 
                 RowBox[{"Ainbasis", "[", 
                  RowBox[{"[", 
                   RowBox[{"m", ",", "m"}], "]"}], "]"}]}], " ", ";"}]}], 
              "\n", "]"}], ";"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"a", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], " ", "=", " ", 
              RowBox[{"Ainbasis", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], " ", ";"}]}], "\n", 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"ad", " ", "=", " ", 
           RowBox[{"ConjugateTranspose", "[", "a", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"k", "=", "1"}], ",", 
            RowBox[{"k", "<", 
             RowBox[{
              RowBox[{"2", "^", "c"}], " ", "+", "1"}]}], ",", 
            RowBox[{"k", "++"}], ",", "\n", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"l", "=", "1"}], ",", 
              RowBox[{"l", "<", 
               RowBox[{
                RowBox[{"2", "^", "c"}], " ", "+", "1"}]}], ",", 
              RowBox[{"l", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"k", "\[Equal]", "l"}], " ", ")"}], "&&", 
                 RowBox[{"(", 
                  RowBox[{"k", "<", 
                   RowBox[{"2", "^", "c"}]}], ")"}]}], ",", "0", ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"b", "=", "zeInit"}], ";", "\[IndentingNewLine]", 
                 "\n", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"k", "\[Equal]", "l"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{"k", "\[Equal]", 
                    RowBox[{"2", "^", "c"}]}], ")"}]}], ",", 
                   RowBox[{
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"m", "=", "1"}], ",", 
                    RowBox[{"m", "<", 
                    RowBox[{
                    RowBox[{"2", "^", "c"}], " ", "+", "1"}]}], ",", 
                    RowBox[{"m", "++"}], ",", "\n", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"b", "[", 
                    RowBox[{"[", 
                    RowBox[{"m", ",", "m"}], "]"}], "]"}], " ", "=", " ", 
                    RowBox[{"Ainbasis", "[", 
                    RowBox[{"[", 
                    RowBox[{"m", ",", "m"}], "]"}], "]"}]}], " ", ";"}]}], 
                    "\n", "]"}], ";"}], ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"b", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "l"}], "]"}], "]"}], " ", "=", " ", 
                    RowBox[{"Ainbasis", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "l"}], "]"}], "]"}]}], " ", ";"}]}], 
                  "\n", "]"}], ";", "\n", 
                 RowBox[{"bd", " ", "=", " ", 
                  RowBox[{"ConjugateTranspose", "[", "b", "]"}]}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", "\n", 
                 RowBox[{"termsC", "=", 
                  RowBox[{"termsC", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "/", 
                    RowBox[{"(", "2", ")"}]}], ")"}], 
                    RowBox[{"(", 
                    RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"SpDen", "/.", 
                    RowBox[{"dE", "\[Rule]", "eps"}]}], ")"}], " ", 
                    RowBox[{"Tave", " ", "/", 
                    RowBox[{"(", 
                    RowBox[{"2", "  ", "Pi"}], ")"}]}]}], ")"}], 
                    RowBox[{"(", 
                    RowBox[{"filter2", " ", "/.", 
                    RowBox[{"omeg", " ", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Es", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "-", " ", 
                    RowBox[{"Es", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ")"}], 
                    RowBox[{"(", 
                    RowBox[{"filter2", " ", "/.", 
                    RowBox[{"omeg", " ", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Es", "[", 
                    RowBox[{"[", "l", "]"}], "]"}], "-", " ", 
                    RowBox[{"Es", "[", 
                    RowBox[{"[", "k", "]"}], "]"}]}], ")"}]}]}], ")"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"eps", ",", 
                    RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], 
                    "]"}], ")"}], 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"a", ".", 
                    RowBox[{"pMat", "[", "x", "]"}], ".", "bd"}]}], 
                    "\[NonBreakingSpace]\[NonBreakingSpace]", "-", " ", 
                    RowBox[{"bd", ".", "a", ".", 
                    RowBox[{"pMat", "[", "x", "]"}]}], " ", "-", " ", 
                    RowBox[{
                    RowBox[{"pMat", "[", "x", "]"}], ".", "bd", ".", " ", 
                    "a"}]}], 
                    "\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]\
", ")"}]}]}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}], "]"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}]}], "]"}]}], "]"}], ";"}], "\n", "\n", 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"pIn", " ", "=", 
   RowBox[{"S", ".", "rhoIn", ".", "Sd"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"s", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"pMat", "'"}], "[", "x", "]"}], " ", "==", " ", 
        RowBox[{"termsC", "+", 
         RowBox[{"I", "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"pMat", "[", "x", "]"}], ".", "Hls"}], "-", " ", 
            RowBox[{"Hls", ".", 
             RowBox[{"pMat", "[", "x", "]"}]}]}], ")"}]}]}]}], ",", " ", "\n",
        "\[NonBreakingSpace]\[NonBreakingSpace] ", 
       RowBox[{
        RowBox[{"pMat", "[", "0", "]"}], " ", "==", " ", "pIn"}]}], "}"}], 
     ",", " ", 
     RowBox[{"{", "pMat", "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", 
       RowBox[{"timeConst", " ", "t12"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SolCfNewBasis", " ", "=", 
   RowBox[{"pMat", "/.", 
    RowBox[{"s", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"denmatDif", "=", 
   RowBox[{
    RowBox[{"SolORedfield", "[", 
     RowBox[{"x", " ", "t12"}], "]"}], "-", 
    RowBox[{"SolCfNewBasis", "[", 
     RowBox[{"x", " ", "t12"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"traceNorm1", "=", 
    RowBox[{"Re", "[", 
     RowBox[{"Tr", "[", 
      RowBox[{"MatrixPower", "[", 
       RowBox[{
        RowBox[{"denmatDif", ".", 
         RowBox[{"ConjugateTranspose", "[", "denmatDif", " ", "]"}]}], ",", 
        RowBox[{"1", "/", "2"}]}], "]"}], "]"}], "]"}]}], ";"}], "\n", "\n", 
  "\[IndentingNewLine]", "\n", "\n"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"traceNorm1", ",", "traceNorm2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "timeConst"}], " ", "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"colCll", ",", "colDav"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<t\>\"", ",", 
      "\"\<||\[Delta]\[Rho]\!\(\*SubscriptBox[\(||\), \(1\)]\)\>\""}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.772904529878446*^9, 3.7729045684522753`*^9}, {
   3.772905491178834*^9, 3.772905495970915*^9}, {3.7729078627755084`*^9, 
   3.7729078888895082`*^9}, {3.772907930278508*^9, 3.7729079420315084`*^9}, 
   3.772999705851316*^9, {3.7730016620695677`*^9, 3.773001669707602*^9}, {
   3.773001706377977*^9, 3.773001707865203*^9}, {3.773003681694399*^9, 
   3.7730036820809193`*^9}, {3.773004500043396*^9, 3.773004513773817*^9}, {
   3.773004590542428*^9, 3.773004679116542*^9}, {3.77300498063548*^9, 
   3.77300502138274*^9}, {3.773005201691923*^9, 3.7730052018263474`*^9}, 
   3.77300524391788*^9, 3.773007973454413*^9, {3.773013894634645*^9, 
   3.773014002940509*^9}, 3.773014151911983*^9, {3.773066761551241*^9, 
   3.773066772311388*^9}, {3.773066821610681*^9, 3.773066859060628*^9}, 
   3.773070318272099*^9, {3.773071619071316*^9, 3.773071619192089*^9}, 
   3.773072875429409*^9, {3.7730730557915487`*^9, 3.773073099059203*^9}, {
   3.773144668570692*^9, 3.7731447501144238`*^9}, 3.773144990888097*^9, {
   3.773166407846539*^9, 3.773166437778253*^9}, 3.7731688089093037`*^9, {
   3.77316887624352*^9, 3.773168890334729*^9}},
 CellLabel->
  "In[3047]:=",ExpressionUUID->"9ffd5b16-1d0c-43d6-a6e2-367afca70d0f"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {Hue[0.22, 1, 0.6], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
/erBlVlnnkSsbsKd/yWyHtVmzQ3rVtNhIxY9YpZeD7vfVcfuE7vXG69bQ6+H
Dc8KzWLicOGEjJGqeqTH+KlxSNGRfWKZYVFLPXZ3fN8sT1z9+uKAdz9Z35fg
dJi4tyTHzfZfPRQttJZZEHMtkpBWX8zGin3NnVeIV+23/y4kxEbrwIrX/7fC
fYZ+91o2/s1eKT9LrP5drj9DkQ3ORxaK2sTGE4+evt3NhholrrqB+Mq232vO
H2TjYGCJ+TyJ7+HVXek7DNjI1dCZqiD2jPigt9SCjYJbT0O9iaM7+3qbbNmw
ClihdYY4b93BJ/F32UitG70uSlxrFij1xI0NKsXApIzkp//zTOpJdzbGFmx6
5kBMqzU8sSmQDbkxn7tS/8+nYNxfjhg2tpZf+ZBL8q3x8sLqUDobmWHSRpzE
3k7lruP/2DhNuZadIOenZep/7INFA5J2XvxGJ/Vw2mu60/JqA/zuFa40Ib7+
S/+BqlMDZvnDlw2Q+vE5uiSxxb0Bzs2b7GWJ45+dO5oU2IC13Q5KRaTeigoy
O9xiGsDXMdl3iXh4j52oUnED/q1nR6etpGOxY1k8d3UDTl+pP3qJWDJZ9khN
awNu3lIPkyLeOuzyJ3ygARc01QMaST0fVGQ7O880oFSo41kg8Rnr7SInljSi
+tZX2hXiGyFv4tYLN+LQ340X1YjdWrsPTUk3oiU8MFeA2G+1RnvZ5kb0cJ02
6Sf9kmjid89frRF2owInK4mLPSaFb2o3IsNfh5FD3MQ6EXvAsBEli/st04lH
+aK0xc81Yp/ymQ0ZxDyHF7X1X22EVlBBQgGx1FNzp1ynRpyZlftcTayc913I
41kjlsZPTw0QH5oXirnk0Qjj1XtmVpB4zu6+dnBPUCPORdcnUcS3bpe08Mc2
Ivf18FpH4ucJMnfbMxpxUGrBl//3s/+As2BqcSMeTanPLSf5SZavi3pR3Yin
a4Ia/5+/0ovbDpi1NeL0zWzen8TNQa+atw42grX+1ldVkv/x3513Fs42Qurk
2cwE4ugKt5UDPE2ouP5XSZOc38WsjVE1Ik1g/dhv20G8JqZEK1u2CS0t/js+
kfOv9bvcHKrchGuhq34YkPnw9jWv4zv1Jgze9Pq8hswHbeeolY46Tcie2uYz
SZxuOqB12KYJM0t3qv8i9WV39G3zNscmTK/kU24g80F+zxZHCbcm6AtvERwl
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
Ahe1TgUfbK7V4/gPqw/nL3JRyU/fllVfr4fd97MywdZc1BKFUVr8zXqkJulo
rbvORZXP7/J66FgPjXCl52uduSjdx67DT5/U4/SHQYHVnlyU54Vo6/4v9Xhx
4draVWVc1KyrR4hUdT2ebbgvNbeFmwrR/z5/GmzwqLqcSt3GTWmcCad497Hx
/PCDT3bbuSknm9WX0tWJbV2Xd+7kpjxmZ4+s1GLjZeLT+QpwU4tHzHxSjrDx
mnr7O+AoN7W1T+cU/SQbH40Dvmhe4qZan+39Pm7HhqB1IHvempvSu2VWfe8m
G+53g1al23BTAeYXrnPbs+Hh9/WN4jVuavU/e1meO2x8ag+7v+o2N1X4OIRJ
u8+G97V4s+5H3NTItGBe6HM2/N3ypF75k3i4ZR7c8GfD79k0fWMgN3X3xb+c
kAA2fJ5vsSsMIj6bWlkTyIbnyy/58yHcVExY6O5tX9l48/buJbsoborS4o7/
GcaGs+e2BKN0biqoLGfsWTwbTl7Wp0e/c1P9x2Ks3RPYcPQOWPAuk5tSojMF
/RLZsPdZblySzU09NlRjhiSzccX/74xaETclopvw9GM6G6dDg7Skq7gp2iHe
U3U5bJiE1Q/8+EX2U8m1KiGXDeNwAa9TNdxUGvvbpWd5bOhH3v/7sZ6bSmlX
85QvYONw7Km3i1q4qbq5aJomnY2Dce93BbdyU/dUhHS5itnk+6i4lWrnpsye
Hev7TqyeuGO7Yyc3ddJkkr2ulA3V1JX1vX3c1G2tqYyCn2zsTDvk+myAmxLK
83pxvpwNlfQHCrJD3NS3cWPbeeKtGQPOZqPcFIdJsepGBhtKmbIbZsa4qQKx
Y4KpxIo/TJmeE9yUaSStQ53Jhlx26TrWNDe1Svvo5SMsNjbkcP20nSH5mfgq
XEosm7vLfukcN0XPzgrTrGRDOv8bXYOTRm2uEzVWrGJjTUHT9RYuGmVyPO+y
D/HqQiFxZxqN+jKsaLjwFxuidNcrKYtoVEGya+xP4vLzDMFHS2iUvI1C4vZq
Nh5xSmboLKVRl+ljTp7Eqn6Xzkkuo1HzltPTY8SDqsk8PXw0iu7spnisho2Q
Gq74ZH4atdZx8ZoA4lM3j590XUGjRrWEfvUTF0Z1fZMQplFL3oi8d6wl539o
+/HuVTSq4k2GRyrxls4H40miNOpWWOCJIeIO13Lfh+I0yk44rUSmjtTbGnHN
45I06pH6y6V6xCcyL/aKS9Go4oLe1U7Ei0wSP3StoVEy9O6l/sQZ4xy7k6Rp
lA0Xs/oHsd2Ho60PZGhU2a58l1riDUrez47J0qjCNV5cfcSNZR1K4htIPBeV
LWeI31/aVtu5kUa9/uSesbCe1MdCl/uJ8iRfYXyCvMRzgWWyDzaRdVc4/N+J
EC0/uplGyfYKDS8itm64cEtsC4369svo6Rx5ntSdeInOrWT/hxO3DxJXCc3n
JSjTqI4j23kbiZ/HH77sokKj+tfarykgpo57rji6k0YJP7d9HEo8/rc9TVSV
Rlll2R5+ShzptsW8YzeNmtaRcjEnNl/vvDhhD43yaJzftINYOLck5j5oVKxp
gtFi4rIzq4yO7KNR369eEvhF8vvw37k5kf006sg5/Vu+xDs8Y7/+0aBRSpKL
P5sTBzK1R50P0qgzoX1OjeT8jG09Ph8+RKPMK16ZuBPzLW1TFzlCoy7uq9+h
TXxHw+ld3HEaVVvx4NRXUh+KLfSdzro06myLVcNR4vZ7Qs2H9GiUbgdXyTCp
N52UaMV2Qxplf6ZafSuxrFxLqfAZGpXbJzD9jNRzQ+GmG21mNOrP7UgbEeJ3
5xzFYs1JfPeuiAWT+p/xWXlJ+wKpP4EUpwTSL5XLtRY62dCoU797ApMq2HCL
fB910JZGNd5Onlci3qv9W1/oGo3KP8D5KJz0Y/hDh6DoGzTqH4fwKU/Sv2el
Cg7dvUWjAm36ZnmJhTIEhg/cplFv1inquJSxUWJ8xkvwDo2aK9xjP0z632Us
nGpxpFF89Lh354j/BwaBbmE=
       "]]},
     Annotation[#, "Charting`Private`Tag$94559389#1"]& ], 
    TagBox[
     {RGBColor[0.8509803921568627, 0.7333333333333333, 0.592156862745098], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
19/Hs3cYMGWJUkpjyPlfcdLzTxmQ+cpZVxBL5J5qhzkSGUisYP3WSCZy86XN
i7IYyD/AuFOcSvQpV7gsLmMgdm9z4MbvRN5/+tXSbgbqGiZcnLOJvHjzNp5x
Bk5pfCy0zCP6YkZyly2uhXm+rtu6AnLeL9OEd3Ut/JW0G3ILyXmrOz3LpWrR
fvmu9f4Scn7fkZsrt9WizMLx3LMycn7NmlWrVMn5PX76heVEXvFxt4B5LUSX
r63MrWLC+YmRQ41dLfjNdWX8aph4ZTD/4tmVWmTahY5IMZj4xfep0Ni3Fnuj
TFLCa5noqzCaEHhcC7MfHfSZOiYEg+Zl6WHkfvu9ubvrmVA79sk0JLYW9eI9
5SYsJs6uMvY3Sa/FR7qisVEDE08q51MFf5M+ORGQqdjIxPegTx30anLe0O0i
m3DbMWPB5621+OVD/xvcxATv6gUN08FaZEnwvRNqZmJn1aerQnO1CNi/WPom
Yatg42jGsjoEbHtR85twgOFC9XPhOkj+4xEbJZy0OpbTjPQRpfbDWa4WJuqr
jHesUa7DpG7Blhki53y6YFN7oA5Uj22tdMLyRrHBL47WoefcafHnhE35TfLM
TtZhhUfCOVXC3tUL7DXn67DZnqlTTOz7+DR2XZ1bHcSPX1faT7jKyORYqH8d
jlp2vAol/szwU3zNn9XBfan3HIv4L1MTmyj8rg7bBN9ULiWs/8ykpe5LHS4f
NEgRJ/FyNabwvfxZh3fythAj8YwQ+IzjpXVw+3lz6WImE8U1JpdEmHUwOLgl
uJbkY/gZ5S2zk/hr53/qOcmXuMnn8pejdcizTxyk0pm4SKdsE+VjYpPLXSNL
ku8XIZ9P1kswcX/Y0LGsgokcE9PAV1uYaAlXfLOFxgQ/43OfqBYTZqPm776V
MpHOMP0s5sWEbsNMwfJ8Jlqfc7BYD5hAiufOhVwmlpnFLQt7yUTNubX2f0n9
nqzlcBQnde5/tc3U/wcTi+riNkn0MeFyKGbg//2wJdTMvHGKCdnjwcsavjBh
bL4o4M3SeixRfRzpGM/EhzqzLgnpeqi3X7d2/siEHnNRjKRFPXZrfrWXD2ci
pN5cWqqoHicW/+juC2AiViglc6SmHgKagm1OpH9zDJebFrbWI/ZCrHb/LVKv
JbkBF2fq4f6Z+/QQ8UP9x+aBzG0shM9IqvBeY2Lg9Wz68RAWyrzfeU6dZmJx
nanh1ncs+LitLfhyigkRgaR/lC8seCpTspxOMqHx0E7yYxELgf+d1p4xJ/3i
WX5rfIaFjCqTb9cMmEhM3yRRwt0A80ouRccjTBSM+n17I9iA9YeeNZ3VY2LI
aVePxvYGqF47LOGtzYTmyYgjT20akJlwhX/jASZOvJzusr/UgPbEmYtOYOIy
3dh3r2cDAulVHD/3k37W5/naGtIA+Xi5Nu+9TCTfs9VPfdcAfhW1/OHdTBQW
/OwM+NKA3WNvsy/vIvWx30VEobgBsSmnqCHKTHC7lyVzMhqwV3V0094dTEh8
k9WrbWuA09uNhf8UmdDexvLymm2A6dtu3mvbSX857hQ25GnEb7//dumTeX0l
5nHSBqFGSD7XLlLaykS4pEZ72fZGPBznEd1I6uirRfjNCNVGyOgM8apsJvX6
fFLoqk4jxoNb4gzlmGiqMkzUMm3EDn16recmJkZXxOuI2TZi+Hjcz68bST0d
Xvp34FIj3h32DpuWZWLt3dOeeZ6NED3G+HyEsPKvH4LP7zWCIftGPGkDqcsF
wS/nnpPzF/JWridsvc9Ze39UI556XLWLlGHi2vWSVr7ERmSsaWzcRvh+ioxH
e2Yjgob5jUukSX8NegmkFzdC/aca+wrhb1uY8Q8YjZDvf/B3C+HSszu0Tv1t
BOXWd8Ph9aRPogJblIYaMVP7n3Uh4fHmrhtL5hoRp/Be8DPhBFoA/+CyJohZ
mKWFET6bLRdfK9yEthV32eGEpb6UaObINsE5NzEmiXBd+PmWj8pNCKkc5qAT
fvKI1z1IvQnLTeTleMj9Ol7x/O4GTTDc573nCOFFF4/E21g1wZXXG9GEM04O
ah52asLqD09nlhH/XPSftOxwb4JpwyqKH+Et+xXdxQOaoJDqysND4tMuX8XP
9bwJL2fmt0UQDhO/Et8f1QRdzsv3tEh8TXgFtBhJTVj/hEtugfCK2a8tWdlN
8GcHry4k+fFmjfM/YTUhJlbtgz/J5+7SF/FuPU3Y5SzmfZPkeyhjt9bpiSZ8
45sJuUXqweaVu7sSfzOWvHyb9JPUi+h9MQGxdc0QWr3rO5vUU/WNzHjO7c3Q
tvvboqxA+uv4fEuNbjOWXdUu61RiYlb7rftP82acydLgMiH1m7qbKhBj34zn
9i3nKneSOSLsp3XdrxnJt158GCX1z13LlSCS0Qy+73NczaR/cn7HaC0qakZf
7961GaS/bnzTau2lN2NTz2aRdweZ6A25J5DJbgZP6mvbUDL37GP9938RaAHf
ybD/hEg/a59bFn1MrwW3E880bLUl87u1fuiQUQtaHr0czbZjgnL88/69Fi0I
M122+YQDec+09WrXO7SARdtIT7rAxOZNj5aN3mqBXlKCVqkbE8u7Vl1+/qMF
43UzBmFkv2gRz3ARyGtBQ6KD/Z2npJ8Nba4GF7WAeemKzLXn5P3JSr7+iN6C
UF7t7LNhpF5DjLz8B1uQa5v4IZTMR2WNkAeu0q0IOvpnjRjZFywjhWNMH7TC
eOzVjmNkzm6rzflQE9SKtrLinOFZYu/yc58MQ1shGGH0+iWlHtFu3+OOvG/F
snPfj06QOTxw1CJFM7sVzjoGxaNC9fCbf52jMtKK3h/1a6Z31uOT5VqWkGUb
IsN1ak671cP+Vvrmq6fbMGOzfPC9Zz3Wfz7mXnm2DdOb9vYO+tTj1fQtkYdX
2/DOmXsk5F49Hr7sNuN41Ibxw7W3tryux6XapJp/OW2I2Gn52SO7HjuNNMpz
ZP+ixExvTzwvC7m653Idh/8iS9dJZEMaC0fKNgQZTv3FfTunJbt+stCg32a9
l9KO0Mafp/R+sTBpYElZtqId/Ler1X1pLCiY6eOTXDuORwosWtnNQoSt4s8u
63YEfDkx+VikAV6eU+lnaO1oo3/KaCdzlnc+NUCP0Q49NpO+8lYDXnm7mCs3
tkOI707O7nsN+Ob3b4LzXzt5v+ze+ZE5PBDQqBK1pAMRGU/FB+IbcDIk92vr
/g5Yiz0LmW0kcz7hXqJVXAdubp6JObunETn9EjsrkjtgH34k2VOtERpbk78f
+N4B5ZVnD9w72Ai9uPo8md8dCODkeB+g34gTsVvovc0dyLLa2iB5uhE3Y/5M
ufJ3YkW2UIKHfyMWdZ726hbphFqfXcbk/Ub4bxhfZCHVCfVMj0DHx414FC3J
u39rJ46uk34qH9qI8HeXJDm1OnH6dsn+TZ8akRW+6uBj9044Jrrx1BSROdj0
vpDiS76XPpf6uIzMfYm9ei53O7Hky2jN/opGlIfZmJg860R5W17E5dpGNL1K
OSuW0Ikc70dvdnY0wqZeq+/h1048XNGheKu7EZ0iDc7zGZ2g+Rw6lPevEQOh
i91bCzsRPS6xUXC4EQvPTR5+aO2EnOW3LbzzjbjN6OET6e7E89BWtXZKE7iF
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
VmJvDMmX4846T1dyv6HXZO0HCrXg5wbDy9fI/fco1dc+Uaji5hGy168Sfdl+
8fyfKdTuC3zswCtE39jigKQ4El+lqCupLsSeLXdtjiYQ/Xla9v2XiT2nefb3
fyHxeJt2ZSfhRxefpcUnUagXXU26vZ0LsdPjfxWYeTxV3RfG7xmikKQohFIJ
IZrM7ZWkG8mQIZFUimgQIVOZSiEZylRJqN5kKJXKSwmdc+9JCJWQIlGZGiSl
l9/+/fn9OHefvZ7nWevsTXn5wTs8+HjF8UTHIRZ1xBYUat/jwfXvR15YYI45
t2rJcBkPxnYtBO4gizSvVF0pecCD7+5BkdswNxdZzvMt58HqseTN4wdYFFL+
Kk2nggcNaSbWhZhV2J0zv1XywImYrnIAM9c8EH/7Mf59464QE8yH3weJ+D3h
wej52JF5mOcOkpHLa3iwq3qdtDjmqt9nxr/XYr0fHDwtitlLRC7wDoOf7yhS
lcYsNSv/q78A1xcqcU0D8wPlZT4rOR4U1DuX2WDeoVn+ceQZ7scmLfkYzCIG
693vPeeBTXVVTC3m4vWNbQENPKCfO8TNxPU42rk4rH7BA7+kGb3emCfcehtG
m/D+e7qCGjFf8zlscb+FB2Xlh6VMsT5WR//WBr3C68/mHX6MeSQmFum38oAv
JtjHx/peTJYuH3vDg2e0V20HZrPsSysftvPAZZ+Xehj2o79ArST4LfZvbcBW
VeyfYe2a/D/veXC7OflZFva3u1Go9G83D0S9fVgP7P/pt/aZoT08mGv4c6YB
zkfrqHfi3z4eOKy2+DSJ8xNBjU6t/MwD5arOH99wvpZIRUaH9+P3P5x+YxDn
L1A9/ejEEA9CPga2EDifs11rdvFGeXDu9JBo1nEWVXhtflv1iweW5mNZryJY
POffOEX+5sHwpk7leVEsKk0c3kT+x4PW+qSqJ7hfbJ4o6NE0AaZo+PcR3F9j
z6/drp1CQELK5z+j8Sy63KareUKUACmLsIBI3I9DPzYsEBEnYM+j53klSSxK
4zVfYCQISC8IN9qSwiKT6W6ysZIEuB/a3j+RyqIE1SPiU6UJ2HrCLetgOotW
rpg8IZhFQLHP/sLlmSxqR3G80zIEWF9gXk1ksShqk0zoxjkEGI1vkG2+yCIN
55yf0+QIcIk471iC50vTnqW+nDwBcc4Hdqfm4Lz6lX2Jm0fAY6mRpcdzcV6P
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

       "]]},
     Annotation[#, "Charting`Private`Tag$94559389#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox[
    "\"||\[Delta]\[Rho]\\!\\(\\*SubscriptBox[\\(||\\), \\(1\\)]\\)\"", 
     TraditionalForm]},
  AxesOrigin->{Automatic, Automatic},
  AxesStyle->GrayLevel[0],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7731451171555777`*^9, 3.773165214891302*^9, 
  3.773165640321707*^9, 3.773166517289168*^9, 3.7731667041791058`*^9, 
  3.7731690625298557`*^9, 3.7732410829434967`*^9, 3.773242786594287*^9, 
  3.773251065960013*^9, 3.7733440038128157`*^9, 3.773409510843514*^9, 
  3.773409951211315*^9},
 CellLabel->
  "Out[3060]=",ExpressionUUID->"9f7d8d60-b5c5-4f5e-b909-63c071d10e61"]
}, Open  ]],

Cell["we compare the errors of CGME and Davies:", "Text",
 CellChangeTimes->{{3.773168818564107*^9, 
  3.7731688446674023`*^9}},ExpressionUUID->"ed93d8d0-a52a-4b83-9ba8-\
11fe81cbd485"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{"traceNorm1", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "timeConst"}], " ", "}"}]}], "]"}], "/", 
    "timeConst"}], " ", ",", "davNo"}], "}"}]], "Input",
 CellChangeTimes->{{3.7731665498398333`*^9, 3.773166551796976*^9}, {
  3.773168811523387*^9, 3.7731688165298986`*^9}},
 CellLabel->
  "In[3061]:=",ExpressionUUID->"ff7c15f4-dc94-49b5-9166-7c281b3b2b98"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.27519639522225736`", ",", "0.30385099205181676`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7732427994409513`*^9, 3.773251084912257*^9, 
  3.773344007295679*^9, 3.773409514329117*^9, 3.773409954716653*^9},
 CellLabel->
  "Out[3061]=",ExpressionUUID->"c108d79e-4e29-45dc-8445-44a150c2ec17"]
}, Open  ]],

Cell["and proceed with more plots:", "Text",
 CellChangeTimes->{{3.77316883194154*^9, 
  3.7731688386760902`*^9}},ExpressionUUID->"76c818bc-ef86-4ae9-a044-\
7228edefeea2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"Diagonal", "[", "\[NonBreakingSpace]", 
     RowBox[{"SolORedfield", "[", 
      RowBox[{"x", " ", "t12"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "timeConst"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", " ", "\"\<Original Redfield\>\""}], ",", 
   
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t/Tsb\>\"", ",", 
      RowBox[{"Subscript", "[", 
       RowBox[{"p", ",", "n"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "colRtd"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Framed", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<E=``\>\"", ",", 
              RowBox[{"NumberForm", "[", 
               RowBox[{
                RowBox[{"Es", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}]}], "]"}], 
            ",", "10"}], "]"}], ",", 
          RowBox[{"Background", "\[Rule]", "LightYellow"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"timeConst", "-", "0.06"}], ",", 
          RowBox[{
           RowBox[{"Re", "[", 
            RowBox[{"Diagonal", "[", "\[NonBreakingSpace]", 
             RowBox[{"SolORedfield", "[", 
              RowBox[{"0.75", "timeConst", " ", "t12"}], "]"}], "]"}], "]"}], 
           "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "Bottom"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"2", "^", "c"}]}], "}"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.773170277784172*^9, 3.773170299949004*^9}, {
   3.773170345356943*^9, 3.773170347175692*^9}, {3.773170379675475*^9, 
   3.773170532852212*^9}, 3.7731706201521673`*^9, {3.77317067028871*^9, 
   3.773170716101059*^9}, {3.77324283903459*^9, 3.773242845110989*^9}},
 CellLabel->
  "In[3062]:=",ExpressionUUID->"c1af6835-47b5-4525-8f2d-019f5304bc67"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Hue[0.5, 0.5, 0.5]], 
         LineBox[CompressedData["
1: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
vSAy8p2DeHOTU2llNwOWm3OY4384CJbyKSmxMQaok3YB82wOgv/YRF64ABNl
fhXty2Q5iWjd6OtbwUR/fd2WX3KcxDy2m7IJJoSkm93vKnASebsaH0UfYsIw
s2f1gBInMT2pk7hKi4mmet4TlVs4ic3ysUoC+kz0Sh0sCNrHSay7vq1e+QwT
ApmfY8RMOAmNt9kG87eZOFYfdUEmgJOw1t96kyOLvF6wRTInkJNI3lN6IuUj
E0+PrKUaBXMSVwvi7U99ZqL8y3ODpy84iZOalkfivzGhE/Fk38QrTmLr2tgP
u/OZ0LS4LvbnLSdh/PTd2Z0VTOzvPlLmUshJdGdwjhJMJlpkH/iIFHESUtEl
CcUsJu6aFSD1Fzkfy6wynW4m8sr3fuks5SRqsn8Y6fYxsTdNNV6vkpMwGd7d
umeECfXra+/JN3MSTxMkAkvmmVCd799aOc5J5Aq8KL+zkoVDy3b4+01yEn+W
vJxoX8WCscQdts40JzE3H59zWIyF+7uXRBXNcRIMfjYvzxoWKm9KLcvm4iI0
OCQsLkux4Digz4wX5iLCX3ef/rqeBe/558SFlVzEc77y1ZMbWAhb1vRaWpSL
WFwjZ7J9Iws/lG0MI1ZzEYMiIsfiN7MgZHM/P0Cai+i7k8R7eRsL6W3pEXc2
cxEVAW9Wuuxlke/38XF1FS6Cf8/rHP99LDTO7z0xrspFRNTNsmM0WFiQKOV1
2sFFDJtXNRUeYMHApP3Gxb1cRGDy8BnWIRYGqlYYHNfhIiTfBPTn6rKwudCZ
67+LXIRcRjD3B1NyPPn95b8ucRGnzIT9nc1YOP7jyvOLl7mIHaeuHFcxZ+F6
7nnFBDsuwiNm8WXCGRa+fT6hpXCNi2gcSnt/14IFzZStT+XucxFnImkc7dYs
nH0+LCIdzkWsE3y4M8iBhcFg+6bvEVxEfHb9S1lHFjyCuuPOveYi2p56NGeQ
jnvWseNNFBexZoPSuj9OLHQ/rj4tmchFTHjPy0xcY+Hm3cwIiSwu4sg3cTdJ
Fxb8LjnLra7gItgJQj/p98j8xlz5nv6Xi7BbXOFkep9sr/m8mVYVFzHH71vw
l3TOyZPBt2q5iNczvpe/erDQu387Zz2VdORbq8deLOiKj3cEMcn1i1ikSz9k
QaD0dozAIhcRyhnofNKfBXEuZ404Dm4ibjV1Uwlp+f1XqHu4uInZlrwd+56x
sPejqbDtEm5iqv2GhlIAC3bRezxLl3ET71c0Z3IEsVB+e87SZw03oapcs1D+
nAXfDR4yC9u4CW8OSdOa12R/ez3PfNvBTey6WLDPOpKFp8e8Xl5X4yb+604T
nPy/HR+sYO/mJri5+h9KR7Hg/+nxYhW4iei9+9XdY1gIIILaY/W5CbvbIdY2
iSy8MI2NPmLLTVww98kUy2RB1C6uedGOmzi4cLSonHSoe/zqHHtuQm3/SiGv
D2T+ohIDVZy5CdcBKYORLBZeMpI9Vt/mJlqPcPt2fGbhlXOWZY8PN+F3K1B0
NpeFmCdFMs9iuIkI01fpYmUsRPnO/laO4yZkhxTj6KQjn267XhLPTdhbCAdn
lrMQ7h/9azGJmzBpEzE/XsFCYJC77fU0boIW4mwVXkXur/AdH01yuImzp0UN
jRvJ+nkXryVfz01oqH6udWSwsPb3A4evfDzEAbtAPgMuNiovVov68PMQLmKP
Dlpws+HDKZV3YhkPMSOeH+7Iw8bw3i8CvUI8hFyMg08gLxslad1vJcV5iAvH
1r2oEWDj+nN9upciDxET45h8YhUbFRarTfQO8hBuMz7Llymy4T1nvbDmMA9h
0NHcIPIfG7vCMxOZmjzEwf4ljNVKbMTVHB2/r8ND+GjOf5XbwMYdzbvBH47z
EG+kyp9u2syG0sbOP+IWPERrx+abK3ey0VKy5UaXJQ9R1y38XkCNjWBrN4nM
CzxE+sCeEk51NuYjV9kevcRDHD/iE9K/i426FVq8d+15iILXpv0f97HxJDUk
TceRh7hV/yw1ToONA0fbjcSceQjlBXWloP1spHi7xqff4CHOu5Ztuww2zssU
67rf4iFSz5zOOUGwIZYnMqp9m4d4oKrWs/sgG+WmFhGid3iInaEl2TKH2PCc
SCE63XgIEZXL65ccZuN/0hgeVQ==
          "]], 
         LineBox[CompressedData["
1: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
KnJ7P0ghso/YhNy9Tkcm/7+z+sMUQtQ9NLJZlw4V1SPLiyMUwjLMNOimDh2j
Ho+KgscoxMlvMrortOnwrcp4IjlBxk+RqKnUouPAwuDBL5Ok/vtZE0M06ZBZ
I+nlOU0hZDZd4XmsQYe6gGWf4j9yfdV/a43V6TAUK5NhmyPr3d2obX+VDpvj
KyKr5inEvNG9D9lqdPgrKM3aLVIIK+99wjSS49X91E4vU4j+7Wd3PrxCR9Gd
5ox5Fipx7vPHsBlVOr483rqmkEol9k/2yYeT3O2ob2DBSiV20wr6dUie9k+q
kGSjEu9v6yicIHl1zMiWsZVUIsZxSkSCZME3Rxjpq8j1RrcgS/KhcutvRmuo
xOBfN+1HJMvXVewXW0sl/pXtkywm+VrHSo9eTipxeSuLgyAZj8nQxd+x66nE
wokMWjjJDgsviJsbqMSy0oC5JBl/4JrWMEFuKqHnfuN5D8nJAsIzbTxUQqc7
nTODzL9UzEA1hI9KOCtopvmT9Wk4npqmzk/aleIFfcj69SqMs3NvphL63AG8
cWR9OQ1syp4LUomVvnKGvGQ/RJ5UC1wQphKvfZb3mZP9Ouq02mKVCJW4IXpO
sY/sp15MoLjTTiph93fHWW6y/4/etLue2U0l+Pw+P/1E6sOlXOTXkiiV+M/p
QHUoqZ/0jvQQS3EqwSj8Ls4g9VU5NDl5dD+VeL73SbwLqb+mBSmVyQNUQvK4
1n9JxnQsCTDZHkpSiVU185v2mdGhrPHT/LYUlbi770r1Fms6bhnsrNsmTSVO
rNy0n/mMDosnRnt+nqIS91ufPHa0oyPyxUyn1hkyXh++NQdd6BiqW6d8SZFK
FMWIeSn708Hy82oSx3kqUXloFe1ZAB3cw2GstUpU4hhPnWQROZ/SHKLFspeo
xDe9u5uvR9HhpUiISqlTiY21EYYK5PyLV5hSd96mEjWXCngPfSTrXTZYW32H
SqRlW6Y1faHjUum9F7fvUon4S894HBrI+hTf2BFnSPZP41HbX/I8KshVkd9u
RiX2/RyoYumnQzb5oMc2GypxmEtwV+tKBpoSU1UrbKmE3JfTx0rXMHA3QXTz
TXsqwaG9byJmHXn+xgmnRjuR/R/82mzMx8DXyPVfhDzJ9Vd1zs7sYkDnxSiX
YDCVKH5U8dJbjoFhP+PWtyFUIvRkdMWFcwzY+v6J0Q2jEh/0LxBsFxmI8e6U
jIgk9bLPO8JAjTyvXb9e3fKaXJ8VUFt/iwErlwuCJfFUwruw21rTgIE1zu97
tRNJPS+/1266z8B+h3J6WAqVmM3X4c8zZeDx08wQgSwqYSstVzX3jAE2a/Fb
RdlUQrzs9vaD9gwEWSbuuZZLJfrzjV5rOTFQZBFdHFJAJQ7YWD139WCAxcz3
v01lVEJX2TpaNpAB/4cc8QXlVMLs5oWi9SEMbDdxM9GspBLHz0pzfAljQN7I
bjnoHZWwGm0fEHjFgOcd0218n6jEkr7gr4lkBgKj771N/0wlxj6VRR1OI/Nt
u6ElX0fq6Xy7++0M0v/ly35PGqiEE+Xha99s8j7yOrdvbSPJ9LYTXrkMNDDP
fIj7TiXOd9HePckn78NThyiNLVTioKpdKFcxA9OMPRFGrVRCVUpFtaqEAWqO
yAlaO5WQbfnWdrOUAYE9G80O/aQSlj6ncLuCgV131qyt7aQS61VKPZmVDByK
piXd7CbjcRXy561m4DzvZKfvbyrRayfw3qKGAfXLg09F+6iEWpPtE1cmA7e8
ejaV/yH1+EGnxeE9AybM9hyNASpRJRKUce8D2S/qd5WRv1SivSS36HgtAy6n
Pg+6DFGJIJmm0nGS/Rnv3ARHqMSFs9OOgeR9H5n9dkfeKJXI+LapYfsnBpKH
c8svjpP1Zj9jFkpynli6zu8JKqEwbSY2R3Ll7fh/T6eoRPeb9EqZzwx8iYp8
yT1DJaYvzbE+Jrm1NfBg6j9Sn7seFXqT3Mvj8+nsHJWQrkrK8CF5XMX1Xts8
qVdv10JLkpc8bVnNF6lEhM94ohLJq5n06NXLVOLO9/pLK0jmpZpKx7DQiLL7
HHbxpH+RU/daTlBpxGcN9zUHSN7PuPG4nkYj4hIOVEeS+Uhla66/v4JGHHaO
fzZF5is/rJLKspJGeG7w2yBJsqrYOcVgdhqhdVr5ugZZL73bZ3oOrKYRV2ek
iVtkPQ2jTtgx19CIg+IlflfIelu0Smy5vpZGRHzcc3Av2Q8Hnj0F05w0QrW6
b+YP2a/nKiJqz9fTiIQB1XdeVQyEegqM7txAI2bDtem8ZH/jazZ4vd1II4KU
WCadyxnIoqwRvcpDI2ifzUXaSH3U0uevO22iEVdi/CWOknpqypqY3yxAI6Rj
YztPFjLQPfQ3KHszjVj+qtyxi9TfnH57XbcgjUg78vVOahY5X1GNRlbCNIK5
tuCjfCYDG1o/rdwgQiP0q9KP1JB636PyFmd20ggva+MO80QGjnrmtrXsohEa
ms6UmNcMyNSk0U1FaQQPU2UsJ4aBa9KRGVF7SfuUGqt7OAPuorZCSxI04kgv
07j/OdkfKTvtAkkaYXdanGOQnFcPJfugR0doRKNB/5MvLiSbOK7rO04j8reL
xR2yYcArx3W5DjTihFrbFUsjBjhq3E56nKEROSmjHVbkeeLV7E6XPUsjJLaY
murcZMB7znOkQJ5GqL2R/FumTtaX8P356iKNUNCfzlpNvic5Vf0261yiEZd6
KTmcUgz46Ptr8F6mEQVJykYTkgz4urys81CjEdYlnI7XdzPg9ym4zFybRgja
LgjUcDDwUvNVlNx9GrG0tdd9uJ48/w1j2pYNacR3nXuu62rpCLCO5SsyphED
Yhz1GyvJ+zbytc9+UxpRN5S7nUm+B4N6kmz56DTip788s8OHjlDTrOv9TjTi
tXu3PJsCHdFuVULe0TQivFvFcE2sBSLd596LxdAIysbRPZ+DLRDuIfGoJpZG
KGtSlZ49t0CwV1T1cjyNOLXrYUKSpQV8fK3vP0qjEbtfBvw4cckCNsGS2RpF
NCJ545ODZjNPoJMYKy/SSOpHWO8L2+kn4H/v+CB/JSvhysofU/HGHF9uf+V2
WsVKaOSE9wfHmsOJsrVEZQ0rUS6QZvUgwByjUnmrBzhZifgJtrB1luaoSfuT
sIWXldjl/vkeCHM8enGx234HK5G/UtfX7csjfNLj07hwhpXQZglQYAyawWFe
f2nTWVbi7/3JZosOMxwLznz9W5aVuF5+/Y7VVzPE1J+btFFkJWrXXVDwyzGD
pexTvzeXWAnesgIm7ZkZdu3p+sirx0oIZ68q2rXODO01+8x/XWcl5P0EPLwo
ZvDTtxLIvMlKnDeM0J+bMMVC+Mb75+6Q/tTu/h1uMcW3dfJsT43J3/PJSBCx
pnBL9U9TNGElYp7bSP0NMMXpcz/VeExZCXtzg6woN1MkOzBi083JeFIlw3ea
mOKG0Lvz1k9YicTYx/ozN0zBU8I1rkAn93sgIPftiilqNfVCuC1ZiY1WVUaF
8qawm0omuqzIeE5yUpNPmOL/AA9wFpw=
          "]], 
         LineBox[CompressedData["
1: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
4X+jRBB+
          "]], 
         LineBox[CompressedData["
1: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
pD66zLucxKpEdPIf7ZVPyPnmgIDU5VXQ4ct6svk5OV9kLf9jbRXWxdow13uR
73XIZqUpVGF6Z1rxQm9y/j6tI0OrClFrZaM++ZJzt/uuWSZV0L+d6G3qT75n
qsv/+0wVfhTmZk++JufLmrZTPKpguG7Jct7A/+tJBC33ZRXygx5tcQoi36Nd
Opn/rgoeAyveU4PJ+b3ZB/QfVVjb2HVz53tybkkXKcwn/3dRjnOM1POR3b7R
RZVVgBKbbfiB3F95Yn9xaxV0h7/zIYzcH5aqKBmqwjaX37krP5L7xf3nyqar
cOqW0/dqwlrRKexyvmqolW50vfuJ3H9y52WlWDVqFq8PWx5O7ttqrq/eWI02
a5UqT8JaWJ5as6MaZcWUX72EQ1bXaddpVIPmuGWJcgS5PxHWVG9YjX7D6tM2
hLWqLjg1nqrGWf/Vl24SDklQnv/nUjXMtGzqXf6/78V923yrGvS7NYam/9+/
kKfQ8qwawiKffCX+v3/45e/Wt9VIfnDgJON/e9abHm//XI0Zr71XT/1vz4xE
d0dyNQymRd/U/m9/Q7d7V0415oWc9VIhPPI9YVlPaTWubosUufH/e/3dPvX+
qUbcbtPJd//754r6zv7+aqTmJ8yNJP4bOcJXOMCuhk7eOcHXxL9aclVWgwtr
cNvnPI/d//6f/354aGUNzjz5GrM6hNxvOfd4WLoGy+euHkr5P15ZimKsbTUI
OJUYue3/eAZNfBtFDQ53/YrzfUvuX88+MK5Xg+9jgkNVAeS+0bOqiZM12Br5
y5JL9DKyZPUU52YNxnUuvh1+Rc67219NPa7B+n98Bjkvyfdyv0nP+NdAwPfo
0msvyPnt/UfmJNTgy3jn9QdEvyHmC//O/VWDQq07W5qJvkdUypznM2rgbb6F
u4boP+SfTfDCnhroLpQQOXSLnBdsUlw8XoMLjDkPNruS70WycpbMr8VWQ82D
kySfRqwf9y6VrEXnn+m1ey+T87Kvu4XNa9FW9PKVA8lfJ5/j9lXnauGv9WnD
45MMBBvMvH3tUotjZz/temTGwEDZ8QnhV7V4ojocu12f1L/ymdSV1Fq4efgc
s1Zj4KdvVGd1ZS3ax08KRe8m84eh8co3rbWIecPd9mc7Azsqoq6JTNfie6hg
Eof0/4YK4+2rVOpAFdq/Y/VKBub5z9rWHqzDaLKRZvRyBjYfj/Z7q1+HjFVW
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
OfvT2y8fupv2PjJfNAHTTcl9D5/mY//4WhdTkQkIxPuFrriaD1nvTgMj5Qm8
k7n1rk49H2NZ1/h1L06gZMJIsrg1D13yslt/XprA6f1VE7GNeagLqDWUuzoB
UaX6oOfVeci8tPctr+sEWjao5u4qyMOjtTxSuY8nMLaDZXwuIQ/Cd17sUv04
gaW7fMw3382DsuonW8W6CRz7GlvgJpoHma/HH79vnMDqqD9Sa1bkQUR4wVf+
vxNInLtO/TdfHjj95//1dU7A3XTxq0Wzuch5t8X1C2sC1ksfRn/rzIUBN+2l
5PJJ/PWa/GOXnIsr6aVpKzQnobo+pELIKBeWC/6laupMknnbXu/t0VxoGyxJ
dj86CVNm6Nb1WrmQ6joU22Y0ifeGSS3aqrmoEUz/mHRqEg7F1P4B2VzsvxDx
3MhtEpPuvirx0xQopOQ8fXJ7Epl81SfiJikQnW1+lO4xiYj5+mnfWRSMvBbz
kHoyCZudCvntvRREZnu7jPhNguMSUJpcQ8EyUTdLv2+T+Hl811GDJAq4tm8s
qPGTuPOk5s14LAU9scmmnKRJpO/7Ff01igKKxqCB7c9J8A8e/KX0kYIbV84c
VqZOQmj8xq0qHwrOpN9Ttysg9njt5TR5UWCwIBTBjElskVWyHvGkYNO7uj1z
KyfRP8xreOg+Bc1UPcWKv5OIohmoeTpTUCTooMDbPol9m7sOci9TkGbpKbe3
a5LYNbv2tgMFfiMUqU8DkzCSLfn95SwFmhK7Vzmzib/W2FtFmVGw/YKJcOTU
JBZLtJe/NKZAMsVZsGF2EsXbvzTfM6SAoxPLp87LxnCf9yL/IxTEXZfiWSHE
xt0FU74XDlDw6JKh2gsRNo4Yqx3yUqPgxLl77vPF2VDXSMnJ3kvBApPm0XFJ
NpQTK41O7aCg4ehSZScZNqiiefcKlClIOKR6pXcjG5X73OMOK1FgqRLc26jI
xvRFNbVrChQoby6QNVFm4+kX90RZeQoWyUyeKdnBxof10dr9shQkC5k2Z6uy
oe+xqD9aioIlLMHKz7ps/HCA9vzVFLT0HRBYd4wN6bM9/NpiFHxvu6IXaMhG
Pt925vtVFNhUFNOemxP7+LxHPIQp2Fk4NX++JRsHU7zn8AtRwE9RUL9zig2+
sSXLowWJfxOfZV6xY2NJVx5z9XIKvKPS2D0X2Mi9n/RhaCkFZz9277S9RL43
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
b99mBqI+FuPgMS7i9fBiZer/A8vvEuE=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$94560382#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t/Tsb\"", TraditionalForm], 
       FormBox[
        SubscriptBox["p", "n"], TraditionalForm]}, AxesOrigin -> {0, 0}, 
     AxesStyle -> GrayLevel[0], DisplayFunction :> Identity, Epilog -> {
       InsetBox[
        BoxData[
         FormBox[
          FrameBox[
           StyleBox[
            InterpretationBox[
            "\"E=\\!\\(\\*FormBox[\\\"\\\\\\\"-2.4\\\\\\\"\\\", \
TraditionalForm]\\)\"", 
             StringForm["E=``", 
              NumberForm[-2.4403076331166798`, 2]], Editable -> False], 10, 
            StripOnInput -> False], Background -> RGBColor[1, 1, 0.85], 
           StripOnInput -> False], TraditionalForm]], {2.5, 
        0.6220526015817273}, {Right, Bottom}], 
       InsetBox[
        BoxData[
         FormBox[
          FrameBox[
           StyleBox[
            InterpretationBox[
            "\"E=\\!\\(\\*FormBox[\\\"\\\\\\\"2.3\\\\\\\"\\\", \
TraditionalForm]\\)\"", 
             StringForm["E=``", 
              NumberForm[2.2884690882970906`, 2]], Editable -> False], 10, 
            StripOnInput -> False], Background -> RGBColor[1, 1, 0.85], 
           StripOnInput -> False], TraditionalForm]], {2.5, 
        0.01097665490741273}, {Right, Bottom}], 
       InsetBox[
        BoxData[
         FormBox[
          FrameBox[
           StyleBox[
            InterpretationBox[
            "\"E=\\!\\(\\*FormBox[\\\"\\\\\\\"0.32\\\\\\\"\\\", \
TraditionalForm]\\)\"", 
             StringForm["E=``", 
              NumberForm[0.3170420791024062, 2]], Editable -> False], 10, 
            StripOnInput -> False], Background -> RGBColor[1, 1, 0.85], 
           StripOnInput -> False], TraditionalForm]], {2.5, 
        0.2556885362013622}, {Right, Bottom}], 
       InsetBox[
        BoxData[
         FormBox[
          FrameBox[
           StyleBox[
            InterpretationBox[
            "\"E=\\!\\(\\*FormBox[\\\"\\\\\\\"-0.17\\\\\\\"\\\", \
TraditionalForm]\\)\"", 
             StringForm["E=``", 
              NumberForm[-0.1652035342828051, 2]], Editable -> False], 10, 
            StripOnInput -> False], Background -> RGBColor[1, 1, 0.85], 
           StripOnInput -> False], TraditionalForm]], {2.5, 
        0.11128220730949769`}, {Right, Bottom}]}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> GrayLevel[0], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox["\"Original Redfield\"", TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.773191348474029*^9, {3.7732428228272448`*^9, 3.773242845899342*^9}, 
   3.773251108866324*^9, 3.773344007409564*^9, 3.7734095144407*^9, 
   3.773409954849793*^9},
 CellLabel->
  "Out[3062]=",ExpressionUUID->"ed15693e-8f85-4aec-b73b-af2c8fd59cac"]
}, Open  ]],

Cell["we also obtain statistics for the norm of the r.h.s.:", "Text",
 CellChangeTimes->{{3.773251165445912*^9, 
  3.773251178489737*^9}},ExpressionUUID->"7417ecdf-de17-4806-a040-\
09c42c95ae79"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Timing", "[", 
   RowBox[{
    RowBox[{"randNormTable4", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"precalc", "=", 
         RowBox[{"(", 
          RowBox[{"ftdA", "/.", 
           RowBox[{"x", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{"timeConst", " ", "t12", " ", 
              RowBox[{"tLimit", "/", "100"}]}], ")"}]}]}], ")"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"randMat", " ", "=", " ", 
            RowBox[{"RandomVariate", "[", 
             RowBox[{"GaussianUnitaryMatrixDistribution", "[", 
              RowBox[{"2", "^", "c"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"evalues", "=", 
            RowBox[{"Eigenvalues", "[", "randMat", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"randDenMat", "=", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "/", 
               RowBox[{"Total", "[", 
                RowBox[{"Abs", "[", "evalues", "]"}], "]"}]}], ")"}], 
             "randMat"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"matRHS", " ", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "/", "t12factor"}], ")"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Ainbasis", ".", "randDenMat", ".", "precalc"}], "  ", 
               "+", 
               RowBox[{
                RowBox[{"ConjugateTranspose", "[", "precalc", "]"}], ".", 
                "randDenMat", ".", "Ainbasis"}], " ", "-", 
               RowBox[{"randDenMat", ".", "precalc", ".", "Ainbasis"}], "-", 
               RowBox[{"Ainbasis", ".", 
                RowBox[{"ConjugateTranspose", "[", "precalc", "]"}], ".", 
                "randDenMat"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Total", "[", 
            RowBox[{"Abs", "[", 
             RowBox[{"Eigenvalues", "[", "matRHS", " ", "]"}], "]"}], "]"}]}],
           "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "1", ",", "10000"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"tLimit", ",", "1", ",", "100"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"normOft5", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"timeConst", " ", "t12", " ", 
          RowBox[{"tLimit", "/", "100"}]}], ",", 
         RowBox[{"Max", "[", 
          RowBox[{"randNormTable5", "[", 
           RowBox[{"[", 
            RowBox[{"tLimit", ",", ";;"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
       
       RowBox[{"{", 
        RowBox[{"tLimit", ",", "1", ",", "100"}], "}"}]}], "]"}]}], ";"}], 
   "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.773170782601269*^9, 3.773170809105344*^9}, {
   3.7731765566659403`*^9, 3.77317656432476*^9}, {3.773176656629225*^9, 
   3.773176689184099*^9}, {3.7731775214846*^9, 3.773177550531579*^9}, 
   3.773179743346518*^9, {3.773179795714361*^9, 3.7731798014503603`*^9}, {
   3.773179831713477*^9, 3.773179835133624*^9}, {3.773180204142519*^9, 
   3.7731802053391447`*^9}, {3.773182011373723*^9, 3.773182016482082*^9}, {
   3.773182059352498*^9, 3.773182067249628*^9}, {3.773194672825891*^9, 
   3.7731946775047703`*^9}, {3.773194716333214*^9, 3.773194720249997*^9}, {
   3.7732379884863863`*^9, 3.773238020022544*^9}, {3.773238059810731*^9, 
   3.773238060446416*^9}, 3.7732381677513847`*^9, {3.773239049606145*^9, 
   3.773239055044755*^9}, {3.773409603680065*^9, 3.773409659032093*^9}, {
   3.7734099010173397`*^9, 3.7734099113377*^9}},
 CellLabel->
  "In[3063]:=",ExpressionUUID->"2b3daf01-d0cd-4ed4-b56c-4eebfe321755"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"88.376539`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.7732380311152573`*^9, 3.773238074058138*^9, 
  3.773238287594925*^9, 3.773344123045912*^9, 3.773409633400421*^9, 
  3.773410043199452*^9},
 CellLabel->
  "Out[3063]=",ExpressionUUID->"b04669fb-13f9-4adc-bdd4-daf5c71a1766"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"normOft5", ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"timeConst", " ", "t12", " ", 
           RowBox[{"tLimit", "/", "100"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"tLimit", ",", "0", ",", "100"}], "}"}]}], "]"}], ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0", "}"}], ",", "justmaxNormTable6"}], "}"}], 
         "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"22", 
          RowBox[{"i", "/", "20"}]}], ",", 
         RowBox[{"4", "/", "t12"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "20"}], "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7731818898486958`*^9, 3.773181904048324*^9}, {
   3.773181996473295*^9, 3.7731820036102877`*^9}, {3.77318572218246*^9, 
   3.773185906807703*^9}, {3.773190244915888*^9, 3.773190296043832*^9}, {
   3.773243107920588*^9, 3.773243113984798*^9}, {3.773243179817018*^9, 
   3.773243197059628*^9}, 3.7732432345668373`*^9, {3.773248188255875*^9, 
   3.773248207174027*^9}, {3.773251137282749*^9, 3.7732511399371157`*^9}, {
   3.7732512113938217`*^9, 3.773251244651037*^9}},
 CellLabel->
  "In[3064]:=",ExpressionUUID->"6bde93c1-5068-4fb5-8dd2-b8d0deb7e817"],

Cell[BoxData[
 GraphicsBox[{{}, {{
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1lHs0lHkYx8W2UpbcTRdmhBnlMsI5UTwP7ZazOWG01qncShdWSsKwlO1C
SLl0UU17VCi2UhSnZFlj5zBRMXh/Y7soG3W0Lo2Zcauz9uz7/vE77/md3/v+
nuf7/X6el7Njv2CXpoaGRtTc+u+59jeHyddCCVQkFptu8RTD//te6HKv0ex8
/hRi0Wr6Rl8/ZOZ5NajtuujzQXjYVHepJLMbFpq6q8zMPkLak+I743499Ptj
4Bflaf6lsxe6ldwpcYUCfCePCqOiKPp7FbTVb5POcAhci3BRz2ycgpLWxM2u
cXL6vlmoLgj6u3CjHOKfeCldBr9AVZrvgjBLOX2/BhbINsWcSaCAvbRsys1H
E5/u1WweKZLT9bQwufHsC9NKAlnPKycDDebj+6n6gtkMQtf/GiNa/hBIWygY
PXFXva9fG49t6Lmubcj0o4Nv3ibf+/UUBcFra1XZVQtxaXjomUsCQveni0t+
WcHNFVPQMFavLDv8DQpSjoZZeDP96mFF3/CwuoSAkSxiut92MYZom2zerk3o
/hcj1l/X/H1Ov+T2wFTcaQPctl71IvUqo8cQD/MU968UEkg9uXtqVmmIF3Xb
N3W9pGh9Rti9uVOyo4ECh50fJnNCjbHeu0QmDmb0mmBfiE/Y+mYCbzxjJ83/
NEGxuVF3Xinjvyke8R2S7k0hcM58VF1ub4ari8cShh8S2g8zXHao3ZGKJ+Cr
iFe7njXH6bV54sYcivaHhS6fseemnMBsx4SqeYaF+jNJExdEjF9LkBe8aI+o
QA53byarAnYuxVHTK86cWxTt3zK8G27Q5nWQwM5j08pX0mU4P+IwnzvE+Lkc
1fPO53BGCJiFpStjV1vghmOBiiNCivbXAqkymaqkh8CTNRrK6YuWWPv8Z4NG
rz7abzayT6XrWhYRaMz2Tm3JYKPLys7Wl48Y/9mYa3WuqIpFgKXWTM115eCX
EJlPwUgvnQcHA/IHdYz75ZAQ1ZIieM/Bj0GtIu8OQudjhY0xbYJCNQUdnSdS
WCIrdH2XcW85MHlZIf+pi331EjlwYWNKv/8K/EZiac/ZzvC5AqXXXjdVniaQ
cWtByg0taxSv23NpIIfJ0xoVtrNVNvMI9LGkwrg6a/R68KA5NpTJ1wYdLcNz
HG8ScM3KFbr9ZIPvYtR+JvuZvG0wX8RWlrpTcHrCTzhrYYvtoqYfDVMZ/m3R
uKmQ77BeDu8j9YTiLltcs2VR1qAbwwMX7zRoRcfM6fF59iw5J5OLwrE9kla2
nOaDixCeF392gILL6wqSAz14mCX4fN02nOGFhyZ8fdbbLAqUFYJk8xEe8sZr
ondLGH7ssNwjUqarR8DfzDj59VU7lN4+GF8bz/Bkh58Svs8MNpJDxfGepPIf
ViKPz3ts/hWh+VqJB/S9x0rn5lPr0/mkfTqrcCR9vvMhTULztgo9SsbDdO4T
CA0PSXJtWIWPv9tdvfoe83+xR7brVn7ZtwTq2llJMwfs0aUru25gq5zm0R6v
pvlnlDjJYbHHX4nN1g44LFXFFbsQmk8HlERf+SCrJhBzQ5SYTRzwpeHxvjZC
0bw6Infg+HKZJ4EW47DEgFOOmO8uEam7GX4dUSNIe/s/c/xYHLVMNEMn3OE/
PrOmjaJ5dsIJtSEUlclBONp/6JXCCUOGyi8MzvTSfPPRb7hMnbaLQLRj4KOu
ID5aNpRu0BulaN75qH+EeDw7SYHJO2eP2tt8nPis4VVTQ9H88zFfa6JjIIdA
82XDRxe1nXEo3a0yUs7MgzPaFVzQOnOOwH6Bwj090hkbY9EjYISi58MZFfZv
5O2lBP4FEMwd8A==
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdlHlQU1cUxgNULFS2CAkRyw4BE2KiiIjKPQgVpsWRpRYXBGTRYhNECySk
1QZaNhcqrWBRqEpHAcEpUIURUZTVAVGMiOY+i1gq4jKChiSEIDYd3usffTN3
3py57517zvf9znWK3xORZEij0ZL069/3/5/VNV5TjyVdiFl60elK6g00Fw8i
oW2znYTeh4TgPF2Jh5Gs9b3yfLyc3B9Fv7ygBdUH30emjFVqJvMValmWlfW0
4QH5/QRqUOb0OXQp0ICKrW2vVqJN0eXHQ+iY/F+N7vNcIjuvY1QRt1yjC9Yi
7uVmu209mMw3g2SDrJSk2wTa2+uvWj46i9T13SPfKTCZnwZ+RSNPhqYVyNHu
rHbFOkPID86S/BSPyfOMIFBqsvIUF6O8/vNT4VbzwIwpOkt0UecbQ9q2S3Hj
+nzjOXUa0fB8SN3yc3J+jYKsxwQi8jEnr1aBvljdqC743RQSi+tl3WKqvgVw
jWN8ca8Nga5OXFGdPWAGp79JLqnzwGS95rA7Zdc7HymBFt6Lmx52twTzRLs3
0fYEWb8lxEzGMGjOGHVdGNGmFFqBzAEOikWY7IcOFb+qBpQBGEnzd2pnVHSI
D+X0mq0lyP4WwrcdDllPyxXIK+H51MHt1jAyNXb4nZDq1wac0j+5oIvF6Mla
4ZRtpw0QtXe5rcVU/wxga8qjcgYVqNh2XHOOy4Qat3sgnaX0YMItwrxblIxR
iHKvxvuYLbSIEzb0v6L0YUFYXX7hXzyMZvom1W06FuT6ynduvoVJvRZBju3o
1S2zClRXJVaHJdiBZcDLPsdRBanfYijw5Dz2GMco4ftp1VDPYjBty654rtdv
Ts+PYU3RgchgBkbMmP0q4TJ7eB9OzLoMUfraQ67R0eOGHIx6fWmq6VIH8KMH
dGtaFaTejmBGP+G74YUCtRYESDtkjsD7bV/lES+KH0eY7Jm0armLEUtjKD3k
7QSZz1Qhjw5RfjgBbyjoJLcMo68TOzIjxpygOnU3v0lO+eMMJUeDewMNMOq7
m5PJKnMG006x0mIX5ZczDPKFizyNMWKj4MzhjS4QevOE4qE7xacLvAlpZ8Zk
YCSr/TCz0sgVul7J3ev18ZyfrvDcwkSW+kaBMKtHktLkCsfUoQFCfTznrxtU
BNmt8mzCyDvvkGTFV24Qs3Grgc6BIP12gzy3EtnlaIwKJ0MlM/bukP1asDjx
S8p/d9h3KjJoZBmBxnaYS9rl7tDI6E/afBOTPLCh7HrD9a4WjNbduSM+mMuG
6T8eiKqEFB9s2O/mf6NZP08n1xSJw/08YCD6XCnX6BHJiweoaQHWE3q/VNUR
YtvXHiAfzCp3Nabm3ROC2o+2HNDn28i0Fj8+4wkLzviLxosonjzB2UAsfJmD
UfUP9zPObVoCxzjSK9mz1DwuARY9oapEv2/0tiRDZMIBtpaokpkQJG8cWJcl
CVyhj7fHbs7wvsqB1ACx9Zb/+OPCn4GmjQNHMGq6xcrQpXIhOk2Qun49xSMX
LpVM5IiiMLL0I9LbXL2gxmqf5O/PKT69wEr64MyzKox2V5alFzz0giSD6Ky4
SopXHnwaHztbcRujDuuY9LDDPFippY1NWlD88uCDF6H3turvD/tsh3QmLIX+
2GYv1yiK56Xgo8v7aP4ijCTjw2lDyqVg1+lLZ3hS9wkfQkNPsdI6MUrmhTfL
I/mg6/mswScMk7zzwVhT2ReVhJHNU4Ff4wU+NLzcKjgRQ/HPh+LTsaY7zTFq
O0lvLp0vgMJ5N3yadlDzIAD+NX+GqhajPRHKVft3CCBB64H2sKn5EID0rUVg
y48Y/QOrNhFn
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQP747+ukVj1yH7WTBD4aI/KZ3SA8dPAgMsBVV4Q
zoeYJoamXgrOP3sGBOTQ9CuiySujmacG5xuDgQaa+Vpo5umgmaeHal6DAZp6
Q1TzNxuh6TdGte+ZCZr7zOB8ADguoc8=
       "]]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6]}, {}, {}, {}, {}, {}, {}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 22.}, {0, 0.5832637193770934}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.77319156690869*^9, 3.773243116625972*^9, {3.773243184554345*^9, 
   3.773243197557605*^9}, 3.773243235364272*^9, 3.7732482171624613`*^9, {
   3.773251184307395*^9, 3.773251245296674*^9}, 3.7733441230986843`*^9, 
   3.7734100432612267`*^9},
 CellLabel->
  "Out[3064]=",ExpressionUUID->"93a3a261-9278-427c-b820-0063369d51b4"]
}, Open  ]],

Cell["\<\
We see that the 30x smaller number of samples underestimates the maximum by:\
\>", "Text",
 CellChangeTimes->{{3.773243282344936*^9, 3.773243303762473*^9}, {
  3.77325128584941*^9, 3.7732513309074373`*^9}, {3.7732513825977*^9, 
  3.773251388597911*^9}},ExpressionUUID->"a15eb87e-55df-4651-a3a5-\
ce641386c2a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Max", "[", "justmaxNormTable6", "]"}], "-", 
  RowBox[{"Max", "[", 
   RowBox[{"normOft5", "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", "2"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.773251334072814*^9, 3.77325135638822*^9}},
 CellLabel->
  "In[3065]:=",ExpressionUUID->"f73d83a2-e3ee-418e-917f-aacef0b206c2"],

Cell[BoxData["0.027614005064778513`"], "Output",
 CellChangeTimes->{{3.773251345254274*^9, 3.773251357138433*^9}, 
   3.7733441231086473`*^9, 3.773410043271566*^9},
 CellLabel->
  "Out[3065]=",ExpressionUUID->"38b57145-eb91-49eb-a228-b7d1d831a607"]
}, Open  ]],

Cell["\<\
We estimate that it in fact have found the true maximum to the accuracy of \
0.01 (using extrapolation as discussed before). \
\>", "Text",
 CellChangeTimes->{{3.773237334978243*^9, 3.773237432266755*^9}, {
   3.773238505348242*^9, 3.7732385182167797`*^9}, 3.773239058481924*^9, {
   3.7732514174738503`*^9, 3.773251446494708*^9}, 
   3.773347821793476*^9},ExpressionUUID->"c0cc21cc-b020-4bf3-8c04-\
91e7b1f0bf81"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pIn", " ", "=", 
   RowBox[{"S", ".", "rhoIn", ".", "Sd"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"s", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"pMat", "'"}], "[", "x", "]"}], " ", "==", " ", "termsC"}], 
       ",", " ", "\n", "\[NonBreakingSpace]\[NonBreakingSpace] ", 
       RowBox[{
        RowBox[{"pMat", "[", "0", "]"}], " ", "==", " ", "pIn"}]}], "}"}], 
     ",", " ", 
     RowBox[{"{", "pMat", "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", "  ", 
       RowBox[{"timeConst", " ", "t12"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SolCfNewBasisLL", " ", "=", 
   RowBox[{"pMat", "/.", 
    RowBox[{"s", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7625287887312064`*^9, 3.7625287922592063`*^9}, 
   3.7625288488012066`*^9, {3.762529122432206*^9, 3.7625291554072065`*^9}, 
   3.7625292896082067`*^9, {3.7626325691786876`*^9, 3.7626325720166874`*^9}, {
   3.762785600421719*^9, 3.762785600580719*^9}, {3.762785977888719*^9, 
   3.762785979847719*^9}, {3.762786166980719*^9, 3.762786182037719*^9}, {
   3.7650308416573877`*^9, 3.7650308716133833`*^9}, {3.7650309870469255`*^9, 
   3.7650309951367345`*^9}, {3.7650322391523776`*^9, 
   3.7650322636372643`*^9}, {3.765033316522356*^9, 3.765033321116786*^9}, 
   3.7650439873879895`*^9, {3.765044029550205*^9, 3.7650441059298425`*^9}, {
   3.76504414190644*^9, 3.765044220678316*^9}, {3.765045383239561*^9, 
   3.765045461483384*^9}, 3.76504549704394*^9, {3.7650460680930395`*^9, 
   3.76504612860809*^9}, 3.76504621581381*^9, {3.765046742700493*^9, 
   3.7650467868449073`*^9}, {3.76504727352157*^9, 3.7650473040426216`*^9}, {
   3.7650478632135334`*^9, 3.7650479276799793`*^9}, 3.765049900515791*^9, {
   3.7653008786172876`*^9, 3.7653008835937195`*^9}, 3.765315974992253*^9, {
   3.765811106442396*^9, 3.765811106930396*^9}, {3.768663319149805*^9, 
   3.7686633227648053`*^9}, 3.768938469591113*^9, {3.773160584036357*^9, 
   3.7731605855559597`*^9}, {3.773254899450327*^9, 3.773254900376472*^9}},
 CellLabel->
  "In[3066]:=",ExpressionUUID->"216f7a5e-7140-4808-a056-23d1e69b272c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"denmatDif", "=", 
   RowBox[{
    RowBox[{"SolCfNewBasis", "[", 
     RowBox[{"t12", " ", "x"}], "]"}], "-", 
    RowBox[{"SolCfNewBasisLL", "[", 
     RowBox[{"t12", " ", "x"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"traceNormL", "=", 
   RowBox[{"Tr", "[", 
    RowBox[{"MatrixPower", "[", 
     RowBox[{
      RowBox[{"denmatDif", ".", 
       RowBox[{"ConjugateTranspose", "[", "denmatDif", " ", "]"}]}], ",", 
      RowBox[{"1", "/", "2"}]}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7686634778074055`*^9, 3.768663497452405*^9}, 
   3.7686635322744055`*^9, {3.7686866048849473`*^9, 3.7686866054835443`*^9}, {
   3.7686877749087477`*^9, 3.768687815453868*^9}, 3.768938474039953*^9, {
   3.7689385478286996`*^9, 3.768938580790575*^9}, {3.7731607559475527`*^9, 
   3.7731607623113127`*^9}, {3.773168768217155*^9, 3.773168768782009*^9}},
 CellLabel->
  "In[3069]:=",ExpressionUUID->"68c43181-2fab-4155-88e9-e5c18de39290"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"traceNormL", ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"x", "<", "500"}], ",", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Arg", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"DiagonalMatrix", "[", 
               RowBox[{"Exp", "[", 
                RowBox[{"I", " ", "Es", " ", "t12", " ", "x"}], "]"}], "]"}], 
              ".", 
              RowBox[{"SolCfNewBasis", "[", 
               RowBox[{"t12", " ", "x"}], "]"}], ".", 
              RowBox[{"DiagonalMatrix", "[", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "I"}], " ", "Es", " ", "t12", " ", "x"}], "]"}],
                "]"}]}], ")"}], 
            RowBox[{"(", 
             RowBox[{"S", ".", "rhoIn", ".", "Sd"}], ")"}]}], "]"}], "-", 
          RowBox[{"Arg", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"DiagonalMatrix", "[", 
               RowBox[{"Exp", "[", 
                RowBox[{"I", " ", "Es", " ", "t12", " ", "x"}], "]"}], "]"}], 
              ".", 
              RowBox[{"SolCfNewBasisLL", "[", 
               RowBox[{"t12", " ", "x"}], "]"}], ".", 
              RowBox[{"DiagonalMatrix", "[", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "I"}], " ", "Es", " ", "t12", " ", "x"}], " ", 
                "]"}], "]"}]}], ")"}], 
            RowBox[{"(", 
             RowBox[{"S", ".", "rhoIn", ".", "Sd"}], ")"}]}], "]"}]}], "]"}], 
        "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Abs", "[", "\[NonBreakingSpace]", 
        RowBox[{"SolCfNewBasis", "[", 
         RowBox[{"t12", " ", "x"}], "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", "8", "]"}], "]"}], ",", 
     RowBox[{"Max", "[", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Abs", "[", "\[NonBreakingSpace]", 
           RowBox[{"SolCfNewBasis", "[", 
            RowBox[{"t12", " ", "x"}], "]"}], "]"}], "-", 
          RowBox[{"Abs", "[", 
           RowBox[{"SolCfNewBasisLL", "[", 
            RowBox[{"t12", " ", "x"}], "]"}], "]"}]}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "2", ",", "3", ",", "4", ",", "6", ",", "7", ",", "8", 
           ",", "11", ",", "12", ",", "16"}], "}"}], "]"}], "]"}], "]"}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "timeConst"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "timeConst"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.15"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Effect of Lamb shift\>\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<t/Tsb\>\"", ",", 
      "\"\<||\[Delta]\[Rho]\!\(\*SubscriptBox[\(||\), \
\(1\)]\),Max\[Delta]Arg(\!\(\*SubscriptBox[\(\[Rho]\), \
\(ij\)]\)),\!\(\*SubscriptBox[\(Max\), \(i > j\)]\)|\!\(\*SubscriptBox[\(\
\[Rho]\), \(ij\)]\)|,\[Delta]|\!\(\*SubscriptBox[\(\[Rho]\), \
\(ij\)]\)|\>\""}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "Dashed", ",", "Dotted", ",", 
      RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<||\[Delta]\[Rho]\!\(\*SubscriptBox[\(||\), \(1\)]\)\>\"", ",", 
      "\"\<Max\[Delta]Arg(\!\(\*SubscriptBox[\(\[Rho]\), \(ij\)]\))\>\"", 
      ",", 
      "\"\<\!\(\*SubscriptBox[\(Max\), \(i > j\)]\)|\!\(\*SubscriptBox[\(\
\[Rho]\), \(ij\)]\)|\>\"", ",", 
      "\"\<Max\[Delta]|\!\(\*SubscriptBox[\(\[Rho]\), \(ij\)]\)|\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7686646179340053`*^9, 3.768664642172005*^9}, {
   3.7686649732990055`*^9, 3.768664982913005*^9}, {3.768665039502005*^9, 
   3.768665039928005*^9}, {3.7686650854310055`*^9, 3.7686651665520053`*^9}, {
   3.768680525217591*^9, 3.768680540866788*^9}, {3.7686806196658955`*^9, 
   3.768680647715695*^9}, {3.768685634960685*^9, 3.7686856350198746`*^9}, 
   3.7686867264210434`*^9, {3.768686762808076*^9, 3.768686766636283*^9}, {
   3.768687685277731*^9, 3.7686877052670355`*^9}, 3.768687744255005*^9, {
   3.7686882526353827`*^9, 3.7686882694151297`*^9}, {3.768688303471924*^9, 
   3.7686883749194736`*^9}, {3.7686884154244876`*^9, 3.768688460904768*^9}, {
   3.768688494873352*^9, 3.768688571642068*^9}, {3.7686886086587787`*^9, 
   3.7686886124187803`*^9}, 3.7686886485120296`*^9, {3.768938647020121*^9, 
   3.7689387022172813`*^9}, {3.7689387351460915`*^9, 
   3.7689387503626366`*^9}, {3.768938950840083*^9, 3.7689389522207394`*^9}, {
   3.773160788995878*^9, 3.77316079626088*^9}, {3.773165365675477*^9, 
   3.773165380675606*^9}, {3.773165716117399*^9, 3.7731657301304207`*^9}, {
   3.7731667949552097`*^9, 3.7731667992509623`*^9}, {3.773169140036837*^9, 
   3.773169196920109*^9}, {3.773169235149979*^9, 3.773169239271179*^9}},
 CellLabel->
  "In[3071]:=",ExpressionUUID->"c934d47e-c071-4a5a-b1b7-2a1c59f8a6d5"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/h+0mSw7
          "]]}, Annotation[#, "Charting`Private`Tag$95560501#1"]& ], 
       
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
BWhC94k=
          "]]}, Annotation[#, "Charting`Private`Tag$95560501#2"]& ], 
       
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}]], 
         LineBox[CompressedData["
1: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
Y/1YOkUPwP8AUCxIzA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$95560501#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6], 
          Thickness[0.01]], 
         LineBox[CompressedData["
1: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
E9TAI0eFbS1Rb7S2LACRe7CWroPvmwVb25lbUTeR8Ig6TYVPITXTL7dh/vnd
CxRzKnjunt90cBfygYu5aa5UKL5+IXA3YP05n/Mh4VQIclxJpmgtgNw+GcOl
aCqYHEp5VHhsAZg9U0uaSVSYGazr3HYK5+vweaaYQ4X9xw7CZguc79PpxdBX
VFgj1Wxqb431utVqNm+o0DpJ9sywRd4lV0z4iO+/GTm3pZywX1Io18MmKuhf
PFJq6Yr6kxDhx61UkDFo+5Tkjvru7p7QDiq8WhRcEqLh+pbbKEkDVIhuyNtw
xvv//rvuNg5Twe7B8W0xl1E3DLL/NU4FdrMrlmuZuL7Gywes5qjwbbsYVS8I
67sbSr4sUiGb83F4OAv7vc6/LLCC+1s8ULYqagEqg9w3ElbRQDQ8qP5oNPa/
EnC3YDUNBmxlBgLisP7pxkwVHvweUS9feZWI9VSWuQ8fDcLXmoguJ2O/kYE1
Sfw0sOwd3XHoNupOgX9DBGig/CxcxycD9a+OrtrrabAYs9mmLAv3a4m34dsG
GnxyecWYzcH64NN39gjT4DZYRu3JxXmjkpSdRWjgKTKTTc3H9bkKvyKJ0gBG
bjwvKsJ61+lCLTEaCLxWbhx9jHqXg8EwclfKmz8qT1FXiP7jIk6DYoodB6kC
+93fN1yGHKi7KPHgBa7PltTXhnxGNnHX70rs9z3WuAlZzEtpQug11ifc+ZeF
/Ovl80KtWszbEhpyAjmb39CT/AF1TlHtt9jPzaZHJe0znpdHm+MkkFULvP98
rMd5Rqc+6eC8s//W5M5/w/2Tp7rp4Xqe6992UfyOeYU8gkq43sDbqopnW/+f
dxw6cT90R2r6Attxv/rvWFNwv/gPm2UXdWI/L6NPbbifjZFD9r96kLVVp+XX
0SC57cpGvt/I/V4a2mtpYKMi2KkxhHkh3uxHeGmw2S87zXkEOamxXRy/F4sk
P0rWTOH6jcSu2HPSwJtk0zo+i/67/vu+sdHg0LOJJJkFnP9EykZ5PB+1lmIi
PoRFsHt/WtN6ngqRuQ8b73EsQme9kKHuLBWMFzTjmrgWQa5rTYDQFBV+JTsK
qK1dBMJX8Y2GeD6zB+e+2AgsQobdy9hKPL9uGpFRkRsWoXJj7vkNfXg/tRTz
DIhjPrHnz/l2KvCJEValK6CeJ3m0+BMVGpzjaj4pLQKTa+8r7XdUSHqqELig
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
m8kldvn8vz7Xl+6HKPAfEjAkDg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$95560501#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t/Tsb\"", TraditionalForm], 
       FormBox[
       "\"||\[Delta]\[Rho]\\!\\(\\*SubscriptBox[\\(||\\), \\(1\\)]\\),Max\
\[Delta]Arg(\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \
\\(ij\\)]\\)),\\!\\(\\*SubscriptBox[\\(Max\\), \\(i > \
j\\)]\\)|\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \
\\(ij\\)]\\)|,\[Delta]|\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(ij\\)]\\)|\"", 
        TraditionalForm]}, AxesOrigin -> {0, 0}, AxesStyle -> GrayLevel[0], 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> GrayLevel[0], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Effect of Lamb shift\"", TraditionalForm], 
     PlotRange -> {{0, 2.56}, {0, 0.15}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"||\[Delta]\[Rho]\\!\\(\\*SubscriptBox[\\(||\\), \\(1\\)]\\)\"", 
       "\"Max\[Delta]Arg(\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(ij\\)]\\))\"",
        "\"\\!\\(\\*SubscriptBox[\\(Max\\), \\(i > \
j\\)]\\)|\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(ij\\)]\\)|\"", 
       "\"Max\[Delta]|\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(ij\\)]\\)|\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   GrayLevel[0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                 PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0], Editable -> False, Selectable -> False]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.773165328442019*^9, {3.77316536659708*^9, 3.773165381244691*^9}, 
   3.773166803274438*^9, 3.773169064588431*^9, {3.773169141644124*^9, 
   3.773169197989265*^9}, 3.77316924073836*^9, 3.7732549148583593`*^9, 
   3.773344123907612*^9, 3.7734100438360767`*^9},
 CellLabel->
  "Out[3071]=",ExpressionUUID->"26ac4808-4204-435e-85cc-2413ca97c74f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"p1", " ", "=", 
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{"SpDen", ",", 
     RowBox[{"{", 
      RowBox[{"dE", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AxesStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<E\>\"", ",", "\"\<\[Gamma](\[Omega])\>\""}], "}"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7695382340529094`*^9, 3.7695382469697094`*^9}, {
   3.7695383879313097`*^9, 3.7695384356517096`*^9}, {3.7695391512611094`*^9, 
   3.7695391525715094`*^9}, {3.7702487906998587`*^9, 3.770248886542136*^9}, {
   3.773160420507016*^9, 3.7731604214268093`*^9}, 3.773160703804121*^9, {
   3.773168710141799*^9, 3.773168733334859*^9}},
 CellLabel->
  "In[3072]:=",ExpressionUUID->"167812a9-e51f-4e7c-aee1-401f29de807e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Es", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "-", 
            RowBox[{"Es", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], ",", "0.025"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"2", "^", "c"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"2", "^", "c"}]}], "}"}]}], "]"}], ",", "1"}], "]"}], ",", 
     
     RowBox[{"Filling", "->", "Axis"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7695390561791096`*^9, 3.7695391582655096`*^9}, 
   3.773160706946615*^9},
 CellLabel->
  "In[3073]:=",ExpressionUUID->"df2ca2f5-fb5d-4582-9763-c958b9f41a1d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "p2"}], "]"}]], "Input",
 CellLabel->
  "In[3074]:=",ExpressionUUID->"7403aaef-3ccd-4d85-844d-63d5e8ff5a1c"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
3kb8boL/A2+ypvs=
        "]]},
      Annotation[#, "Charting`Private`Tag$95560594#1"]& ]}, {}}, {{}, 
    GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwAGIQDQOzZoKB/VLrR4Uur4QOwPhdb9fE8vKzwfnlT6WP
ZxozHUBT7wDjo5vXIKzP873rvz2Mf3niChn5hcwOaOY7oKnfj8u8GQ4dW2Tu
3rNHc48DmvkH0NTjNI8BDcD8D+PD/A/jw/yPpt4B3RwYgPkfxof5H818BzT1
+3GZB/M/mnvg+mH+R1OP0zwYGKnxDwARyxQ/
     "], {{{}, {}, {}, {}, 
       {RGBColor[1, 0, 0], Opacity[0.3], LineBox[{17, 1}], LineBox[{18, 2}], 
        LineBox[{19, 3}], LineBox[{20, 4}], LineBox[{21, 5}], 
        LineBox[{22, 6}], LineBox[{23, 7}], LineBox[{24, 8}], 
        LineBox[{25, 9}], LineBox[{26, 10}], LineBox[{27, 11}], 
        LineBox[{28, 12}], LineBox[{29, 13}], LineBox[{30, 14}], 
        LineBox[{31, 15}], LineBox[{32, 16}]}}, 
      {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6], PointBox[{33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46,
         47, 48}]}, {
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6]}, {}}, {
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6]}, {}}}], {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"E\"", TraditionalForm], 
    FormBox["\"\[Gamma](\[Omega])\"", TraditionalForm]},
  AxesOrigin->{0, Automatic},
  AxesStyle->GrayLevel[0],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7732549342320023`*^9, 3.7733441239873238`*^9, 
  3.77341004393465*^9},
 CellLabel->
  "Out[3074]=",ExpressionUUID->"ca3f81be-5290-4c82-8f7f-e051cffa2d1a"]
}, Open  ]],

Cell["Analytic form of the bath correlation function: ", "Text",
 CellChangeTimes->{{3.773322568084318*^9, 3.7733225810464487`*^9}, {
  3.7733491935877666`*^9, 3.773349223821528*^9}, {3.773360272608344*^9, 
  3.773360281544643*^9}},ExpressionUUID->"ff30e3fc-af71-491b-b998-\
ebf8ef53f46b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"beeta", "=", "4"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"al", "=", "1.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bl", "=", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SpDen0", " ", "=", 
   RowBox[{"3", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Exp", "[", " ", 
       RowBox[{
        RowBox[{"-", "\[NonBreakingSpace]", 
         RowBox[{"(", 
          RowBox[{"bl", "\[NonBreakingSpace]", 
           RowBox[{"Abs", "[", " ", 
            RowBox[{"beeta", " ", "dE"}], "]"}]}], ")"}]}], " ", "+", 
        RowBox[{"0.5", " ", "beeta", " ", "dE"}]}], "]"}], " ", "-", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "al"}], ")"}], " ", 
       RowBox[{"Exp", "[", " ", 
        RowBox[{
         RowBox[{"-", "\[NonBreakingSpace]", 
          RowBox[{"(", 
           RowBox[{"al", " ", "bl", "\[NonBreakingSpace]", 
            RowBox[{"Abs", "[", " ", 
             RowBox[{"beeta", " ", "dE"}], "]"}]}], ")"}]}], " ", "+", 
         RowBox[{"0.5", " ", "beeta", " ", "dE"}]}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"corfunk0", " ", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "Pi"}], ")"}]}], ")"}], 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "I"}], " ", "t", " ", "dE"}], " ", "]"}], "SpDen0"}], 
      "\[NonBreakingSpace]\[NonBreakingSpace]", ",", " ", 
      RowBox[{"{", 
       RowBox[{"dE", ",", 
        RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{"t", ">", "0"}]}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"overt120", " ", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"Abs", "[", " ", "corfunk0", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7683229965224695`*^9, 3.768323003034849*^9}, {
   3.768323093818866*^9, 3.768323132764721*^9}, {3.7687625873242064`*^9, 
   3.7687626580232754`*^9}, 3.7687627013306055`*^9, 3.7687628726657376`*^9, {
   3.7687629207915497`*^9, 3.7687629284603167`*^9}, {3.7687629970570145`*^9, 
   3.7687629975270147`*^9}, {3.7687727835525374`*^9, 3.768772804832169*^9}, {
   3.768776683949239*^9, 3.7687766882677546`*^9}, {3.768917084792132*^9, 
   3.7689170874151316`*^9}, {3.7728150675841913`*^9, 3.7728150686096687`*^9}, 
   3.773410039994651*^9},ExpressionUUID->"c9eba686-f6b8-4f3a-9e35-\
58961283cf53"],

Cell["normalization constant N from the paper:", "Text",
 CellChangeTimes->{{3.773360478054344*^9, 
  3.773360485554304*^9}},ExpressionUUID->"6e093858-2e0e-43e6-b02b-\
ca18dac8020a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "/", "overt120"}]], "Input",
 CellChangeTimes->{{3.773360444034837*^9, 3.773360456892295*^9}},
 CellLabel->
  "In[3081]:=",ExpressionUUID->"273794cc-8313-47ae-b7ef-7c8656fa6877"],

Cell[BoxData["21.033654809550864`"], "Output",
 CellChangeTimes->{{3.77336045180343*^9, 3.773360457760585*^9}, 
   3.77341004564382*^9},
 CellLabel->
  "Out[3081]=",ExpressionUUID->"4720874f-a28b-411f-988c-efb62a455806"]
}, Open  ]],

Cell["analytic form of C(t):", "Text",
 CellChangeTimes->{{3.773360488314753*^9, 
  3.773360494604171*^9}},ExpressionUUID->"5a2f7f9d-c045-4704-b717-\
724b370299c2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "/", 
    RowBox[{"(", "2", " ", ")"}]}], ")"}], 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "I"}], " ", "t", " ", "dE"}], " ", "]"}], "SpDen0"}], 
    "\[NonBreakingSpace]\[NonBreakingSpace]", ",", " ", 
    RowBox[{"{", 
     RowBox[{"dE", ",", 
      RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"t", ">", "0"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.773360065702588*^9, 3.773360107842156*^9}},
 CellLabel->
  "In[3082]:=",ExpressionUUID->"e5b157a8-0ad4-4326-ae65-3ed05a16ead9"],

Cell[BoxData[
 FractionBox["325620.`", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"22.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
     RowBox[{"5.`", " ", "t"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"553.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
     RowBox[{"125.`", " ", "t"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "106.`"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        RowBox[{"515.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", "t"}], "+", 
     RowBox[{"625.`", " ", 
      SuperscriptBox["t", "2"]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.773360068299563*^9, 3.77336011091451*^9}, 
   3.773410047347952*^9},
 CellLabel->
  "Out[3082]=",ExpressionUUID->"e8a9720a-ca79-4793-bf64-41d25cb67467"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", 
  RowBox[{"t12", " ", 
   RowBox[{"tbath", "/", "5"}]}], "]"}]], "Input",
 CellLabel->
  "In[3083]:=",ExpressionUUID->"78dca7b2-6696-4261-ace1-044d7b155bff"],

Cell[BoxData["0.96986218438783`"], "Output",
 CellChangeTimes->{3.7733606764824266`*^9, 3.773410047390972*^9},
 CellLabel->
  "Out[3083]=",ExpressionUUID->"7128b60f-9ab3-41e3-b061-7857c70397fd"]
}, Open  ]]
},
WindowSize->{1449, 864},
WindowMargins->{{Automatic, 51}, {Automatic, -1044}},
Magnification:>2. Inherited,
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 241, 4, 69, "Text",ExpressionUUID->"d4a03e1f-83ec-4f65-8c5c-93b8604f874c"],
Cell[CellGroupData[{
Cell[824, 28, 2229, 55, 451, "Input",ExpressionUUID->"044ffea9-f502-4923-8617-34d3b9c3833f"],
Cell[3056, 85, 1800, 48, 89, "Output",ExpressionUUID->"bc9153b6-e141-4ce7-964a-fa2e0ae5733d"],
Cell[4859, 135, 1778, 48, 89, "Output",ExpressionUUID->"93e43903-9d15-4648-97b0-bd98a10c09ed"],
Cell[6640, 185, 1884, 50, 89, "Output",ExpressionUUID->"bda4520d-fa7a-40e4-b071-fd7c14c93855"],
Cell[8527, 237, 1806, 48, 89, "Output",ExpressionUUID->"548c1fb2-df1b-4628-8779-8cfbfd72dde1"],
Cell[10336, 287, 2043, 52, 89, "Output",ExpressionUUID->"f647597c-3af4-438b-b3dd-514475b1bd31"],
Cell[12382, 341, 1998, 52, 89, "Output",ExpressionUUID->"61e8b23a-2331-4995-8013-eb4b1252f5b8"],
Cell[14383, 395, 1766, 47, 89, "Output",ExpressionUUID->"84ff3f39-41f4-4649-bcfd-cf24143fe4b0"],
Cell[16152, 444, 1803, 48, 89, "Output",ExpressionUUID->"4bd302ad-6c46-4d2b-b917-0c5c3cb91d45"],
Cell[17958, 494, 2058, 52, 89, "Output",ExpressionUUID->"ec6faaad-a8a4-4ddf-b40a-4e1632e19f5a"],
Cell[20019, 548, 1910, 51, 89, "Output",ExpressionUUID->"458e82bb-8839-4b5d-a852-4376b80abaef"]
}, Open  ]],
Cell[21944, 602, 1159, 40, 246, "Input",ExpressionUUID->"468f7cd3-09b3-4a90-8791-770fb7b0811a",
 CellID->2],
Cell[CellGroupData[{
Cell[23128, 646, 625, 19, 164, "Input",ExpressionUUID->"b164b200-1e15-4f1b-883d-f70ced69b1e1"],
Cell[23756, 667, 709, 11, 89, "Output",ExpressionUUID->"83c5c7df-fcef-48d3-a826-1558fd5dabbb"]
}, Open  ]],
Cell[24480, 681, 890, 26, 224, "Input",ExpressionUUID->"9f264f27-5898-4c0f-bbe0-bd58dbc83e64"],
Cell[25373, 709, 1142, 35, 246, "Input",ExpressionUUID->"c3dd7013-b3ba-48d8-809d-475e092fc181"],
Cell[26518, 746, 2640, 68, 429, "Input",ExpressionUUID->"c8c405ce-0dcf-4552-aa2f-2746173cda8f"],
Cell[CellGroupData[{
Cell[29183, 818, 3330, 85, 492, "Input",ExpressionUUID->"eb04e23a-ccf8-4efd-9fb6-b67162a3c474"],
Cell[32516, 905, 503, 8, 89, "Output",ExpressionUUID->"4d4d4e5f-e2d5-4559-8d1a-84e1ccfd790e"]
}, Open  ]],
Cell[33034, 916, 221, 4, 69, "Text",ExpressionUUID->"c0c64507-0fd4-4bf5-a0f7-1e22db00c6f2"],
Cell[33258, 922, 1390, 39, 246, "Input",ExpressionUUID->"3064940a-2c80-4027-88e8-afc5e9a3cfcf"],
Cell[34651, 963, 164, 3, 69, "Text",ExpressionUUID->"ba51d95a-4854-45b8-90dc-3eb84e19d74f"],
Cell[34818, 968, 45850, 1096, 8547, "Input",ExpressionUUID->"c218a418-ed93-4f73-b470-bc8d6bfcf3c9"],
Cell[80671, 2066, 4998, 138, 943, "Input",ExpressionUUID->"82b6dc60-cdd8-4a90-9627-3dd4b94e0434"],
Cell[85672, 2206, 182, 3, 69, "Text",ExpressionUUID->"93baa6e1-4a03-484f-8edf-2754b83c58bf"],
Cell[CellGroupData[{
Cell[85879, 2213, 456, 9, 81, "Input",ExpressionUUID->"0a3b6423-5375-4089-bed8-179e21a41b16"],
Cell[86338, 2224, 650, 13, 89, "Output",ExpressionUUID->"60ba2e30-0337-4be3-9e82-110cc868ae65"]
}, Open  ]],
Cell[87003, 2240, 177, 4, 81, "Input",ExpressionUUID->"2e5e2b07-04d6-4d20-a344-d2790debb0f1"],
Cell[87183, 2246, 163, 3, 69, "Text",ExpressionUUID->"baa4cb66-81ec-4759-9c97-d2845f057913"],
Cell[87349, 2251, 3741, 81, 716, "Input",ExpressionUUID->"a831da6d-8a8f-46b0-b9a8-d15c3957717b"],
Cell[91093, 2334, 161, 3, 69, "Text",ExpressionUUID->"f775a406-6fb1-4083-bbed-0ad3039b9d47"],
Cell[91257, 2339, 3403, 58, 1435, "Input",ExpressionUUID->"96ae3404-47ab-4140-b0e6-2a4b75d27f1d"],
Cell[CellGroupData[{
Cell[94685, 2401, 222, 4, 81, "Input",ExpressionUUID->"ad7943b1-f291-4cb1-a179-d2caedc7f3f6"],
Cell[94910, 2407, 242, 4, 89, "Output",ExpressionUUID->"a42cb053-e8e0-4990-b434-bd80d6f4a60b"]
}, Open  ]],
Cell[95167, 2414, 932, 16, 429, "Text",ExpressionUUID->"d4b59f5b-9fb8-44c3-8fb6-e850e8e45633"],
Cell[CellGroupData[{
Cell[96124, 2434, 122, 2, 81, "Input",ExpressionUUID->"69af36b6-0b6c-4f96-9631-5167eb497ee4"],
Cell[96249, 2438, 217, 4, 89, "Output",ExpressionUUID->"696bc66f-02a8-4097-bfd4-81a1db7df178"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96503, 2447, 212, 4, 81, "Input",ExpressionUUID->"1e323322-df77-44db-96b4-ef6a3ed7303e"],
Cell[96718, 2453, 244, 4, 89, "Output",ExpressionUUID->"f2ca0581-4c0d-41ac-b5d4-1566f8268200"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96999, 2462, 656, 13, 123, "Input",ExpressionUUID->"7d3c41a9-3215-4fe6-9232-1040295a701f"],
Cell[97658, 2477, 265, 4, 89, "Output",ExpressionUUID->"17f5e5af-1efc-4a17-a6c2-59e71e7b4b0d"]
}, Open  ]],
Cell[97938, 2484, 11554, 301, 1804, "Input",ExpressionUUID->"cab418ab-fa16-4e9e-8f4d-5c7a0261525b"],
Cell[CellGroupData[{
Cell[109517, 2789, 232, 6, 81, "Input",ExpressionUUID->"0e428eb9-a46f-4dba-9d71-e4f82c41ecce"],
Cell[109752, 2797, 221, 4, 89, "Output",ExpressionUUID->"9826d79b-3373-4fe1-ad62-2290de3f27e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110010, 2806, 16429, 417, 2829, "Input",ExpressionUUID->"9ffd5b16-1d0c-43d6-a6e2-367afca70d0f"],
Cell[126442, 3225, 51657, 872, 521, "Output",ExpressionUUID->"9f7d8d60-b5c5-4f5e-b909-63c071d10e61"]
}, Open  ]],
Cell[178114, 4100, 185, 3, 69, "Text",ExpressionUUID->"ed93d8d0-a52a-4b83-9ba8-11fe81cbd485"],
Cell[CellGroupData[{
Cell[178324, 4107, 473, 12, 81, "Input",ExpressionUUID->"ff7c15f4-dc94-49b5-9166-7c281b3b2b98"],
Cell[178800, 4121, 333, 7, 89, "Output",ExpressionUUID->"c108d79e-4e29-45dc-8445-44a150c2ec17"]
}, Open  ]],
Cell[179148, 4131, 171, 3, 69, "Text",ExpressionUUID->"76c818bc-ef86-4ae9-a044-7228edefeea2"],
Cell[CellGroupData[{
Cell[179344, 4138, 2346, 57, 369, "Input",ExpressionUUID->"c1af6835-47b5-4525-8f2d-019f5304bc67"],
Cell[181693, 4197, 81382, 1378, 502, "Output",ExpressionUUID->"ed15693e-8f85-4aec-b73b-af2c8fd59cac"]
}, Open  ]],
Cell[263090, 5578, 195, 3, 69, "Text",ExpressionUUID->"7417ecdf-de17-4806-a040-09c42c95ae79"],
Cell[CellGroupData[{
Cell[263310, 5585, 3878, 86, 697, "Input",ExpressionUUID->"2b3daf01-d0cd-4ed4-b56c-4eebfe321755"],
Cell[267191, 5673, 329, 7, 89, "Output",ExpressionUUID->"b04669fb-13f9-4adc-bdd4-daf5c71a1766"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267557, 5685, 1531, 37, 246, "Input",ExpressionUUID->"6bde93c1-5068-4fb5-8dd2-b8d0deb7e817"],
Cell[269091, 5724, 6381, 124, 512, "Output",ExpressionUUID->"93a3a261-9278-427c-b820-0063369d51b4"]
}, Open  ]],
Cell[275487, 5851, 320, 6, 69, "Text",ExpressionUUID->"a15eb87e-55df-4651-a3a5-ce641386c2a4"],
Cell[CellGroupData[{
Cell[275832, 5861, 362, 9, 81, "Input",ExpressionUUID->"f73d83a2-e3ee-418e-917f-aacef0b206c2"],
Cell[276197, 5872, 248, 4, 89, "Output",ExpressionUUID->"38b57145-eb91-49eb-a228-b7d1d831a607"]
}, Open  ]],
Cell[276460, 5879, 424, 8, 114, "Text",ExpressionUUID->"c0cc21cc-b020-4bf3-8c04-91e7b1f0bf81"],
Cell[276887, 5889, 2286, 46, 205, "Input",ExpressionUUID->"216f7a5e-7140-4808-a056-23d1e69b272c"],
Cell[279176, 5937, 997, 22, 123, "Input",ExpressionUUID->"68c43181-2fab-4155-88e9-e5c18de39290"],
Cell[CellGroupData[{
Cell[280198, 5963, 5456, 123, 704, "Input",ExpressionUUID->"c934d47e-c071-4a5a-b1b7-2a1c59f8a6d5"],
Cell[285657, 6088, 75558, 1338, 463, "Output",ExpressionUUID->"26ac4808-4204-435e-85cc-2413ca97c74f"]
}, Open  ]],
Cell[361230, 7429, 927, 20, 123, "Input",ExpressionUUID->"167812a9-e51f-4e7c-aee1-401f29de807e"],
Cell[362160, 7451, 992, 28, 123, "Input",ExpressionUUID->"df2ca2f5-fb5d-4582-9763-c958b9f41a1d"],
Cell[CellGroupData[{
Cell[363177, 7483, 166, 4, 81, "Input",ExpressionUUID->"7403aaef-3ccd-4d85-844d-63d5e8ff5a1c"],
Cell[363346, 7489, 16440, 293, 529, "Output",ExpressionUUID->"ca3f81be-5290-4c82-8f7f-e051cffa2d1a"]
}, Open  ]],
Cell[379801, 7785, 289, 4, 69, "Text",ExpressionUUID->"ff30e3fc-af71-491b-b998-ebf8ef53f46b"],
Cell[380093, 7791, 2640, 68, 429, "Input",ExpressionUUID->"c9eba686-f6b8-4f3a-9e35-58961283cf53"],
Cell[382736, 7861, 182, 3, 69, "Text",ExpressionUUID->"6e093858-2e0e-43e6-b02b-ca18dac8020a"],
Cell[CellGroupData[{
Cell[382943, 7868, 206, 4, 81, "Input",ExpressionUUID->"273794cc-8313-47ae-b7ef-7c8656fa6877"],
Cell[383152, 7874, 220, 4, 89, "Output",ExpressionUUID->"4720874f-a28b-411f-988c-efb62a455806"]
}, Open  ]],
Cell[383387, 7881, 164, 3, 69, "Text",ExpressionUUID->"5a2f7f9d-c045-4704-b717-724b370299c2"],
Cell[CellGroupData[{
Cell[383576, 7888, 682, 19, 123, "Input",ExpressionUUID->"e5b157a8-0ad4-4326-ae65-3ed05a16ead9"],
Cell[384261, 7909, 946, 27, 123, "Output",ExpressionUUID->"e8a9720a-ca79-4793-bf64-41d25cb67467"]
}, Open  ]],
Cell[CellGroupData[{
Cell[385244, 7941, 194, 5, 81, "Input",ExpressionUUID->"78dca7b2-6696-4261-ace1-044d7b155bff"],
Cell[385441, 7948, 194, 3, 89, "Output",ExpressionUUID->"7128b60f-9ab3-41e3-b061-7857c70397fd"]
}, Open  ]]
}
]
*)

